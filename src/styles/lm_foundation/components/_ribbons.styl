/*================== RIBBON =========================*/

@require '_global'

//
// @variables
//

$include-html-ribbon-classes =              com_css.RIBBONS

$ribbon-default-position ?=                 $default-float
if ($ribbon-default-position == $default-float) {
    $ribbon-opposite-position ?=       $opposite-direction
} else {
    $ribbon-opposite-position ?=       $default-float
}

$ribbon-flag-type ?=                         'flag' // 'triangle'

$ribbon-lrg-factor ?=                        3
$ribbon-xlrg-factor ?=                       5

$ribbon-font-size ?=                         fontsize(.9rem)
$ribbon-font-size-lrg ?=                      ($ribbon-font-size + rem-calc($ribbon-lrg-factor))
$ribbon-font-size-xlrg ?=                     ($ribbon-font-size + rem-calc($ribbon-xlrg-factor))
$ribbon-font-family ?=                       $font-family-custom
$ribbon-font-weight ?=                       $font-weight-bold
$ribbon-font-color ?=                        $white
$ribbon-bg-color ?=                          $gray-base
$ribbon-text-transform ?=                    uppercase
$ribbon-padding-top ?=                       rem-calc(5)
$ribbon-padding-left ?=                      rem-calc(7)
$ribbon-line-height ?=                       1
$ribbon-line-height-lrg ?=                   ($ribbon-line-height + ($ribbon-lrg-factor/10))
$ribbon-line-height-xlrg ?=                  ($ribbon-line-height + ($ribbon-xlrg-factor/10))
$ribbon-backface-dimensions ?=               6px
$ribbon-backface-dimensions-lrg ?=           ($ribbon-backface-dimensions + rem-calc($ribbon-lrg-factor))
$ribbon-backface-dimensions-xlrg ?=          ($ribbon-backface-dimensions + rem-calc($ribbon-xlrg-factor))
$ribbon-flag-dimensions ?=                   6px
$ribbon-flag-dimensions-lrg ?=               ($ribbon-flag-dimensions + rem-calc($ribbon-lrg-factor))
$ribbon-flag-dimensions-xlrg ?=              ($ribbon-flag-dimensions + rem-calc($ribbon-lrg-factor))
$ribbon-flag-padding ?=                      ($ribbon-padding-left - rem-calc(($ribbon-flag-dimensions/2)))
$ribbon-triangle-dimensions ?=               unit(floor($ribbon-line-height * $rem-base-actual + (2 * pxify($ribbon-padding-top))), 'px') - 1px
$ribbon-triangle-dimensions-lrg ?=           unit(floor($ribbon-line-height-lrg * $rem-base-actual + (2 * pxify($ribbon-padding-top))), 'px') - 3px
$ribbon-triangle-dimensions-xlrg ?=          unit(floor($ribbon-line-height-xlrg * $rem-base-actual + (2 * pxify($ribbon-padding-top))), 'px') - 3px

$ribbon-z-index ?=                            ($zindex-topbar - 1)

//
// @mixins
//

ribbon-cont() {
    display: inline-block
    position: absolute
    {$ribbon-default-position}: -($ribbon-backface-dimensions)

    &--opposite {
        {$ribbon-default-position}: auto
        {$ribbon-opposite-position}: -($ribbon-backface-dimensions)
    }
}


ribbon-base() {
    shadow-elevation('marker' + $default-float)
    display: inline-block
    font-size: $ribbon-font-size
    fontweight($ribbon-font-weight)
    font_family($ribbon-font-family)
    line-height: 1
    padding: $ribbon-padding-top $ribbon-padding-left // rem-calc(30 10 30)
    position: absolute
    {$ribbon-default-position}: -($ribbon-backface-dimensions)
    text-align: $ribbon-default-position
    text-transform: $ribbon-text-transform
    top: rem-calc(10)
    white-space: nowrap
    z-index: $ribbon-z-index

    &:after {
        border: 0 solid transparent
        border-bottom-width: $ribbon-backface-dimensions
        border-{$ribbon-opposite-position}-width: $ribbon-backface-dimensions
        content: ''
        display: block
        height: 0
        margin: 0
        position: absolute
        {$ribbon-default-position}: 0
        top: (rem-calc($ribbon-line-height * $rem-base-actual) + (2*$ribbon-padding-top) - rem-calc(1))
        width: 0
        z-index: ($ribbon-z-index - 1) // NOTE: Immediate parent container MUST have a positive z-index value (e.g. 1) to make negative z-index work!!!
    }

}

ribbon-style($basestyling = true, $color = $ribbon-font-color, $bg = $ribbon-bg-color, $type = 'normal'){
    color: $color
    background-color: $bg

    &:after {
        border-{$ribbon-default-position}-color: darken($bg, 20%)
        border-{$ribbon-opposite-position}-color: darken($bg, 20%) // Set color if we have a .--left ribbon
    }

    if (($type == 'flag') || ($type == 'triangle') ){
        // If we have a left tip, minimize left padding so that left and right padding match optically
        padding-{$ribbon-opposite-position}: (strip-unit($ribbon-flag-padding) > 0) ? $ribbon-flag-padding : 0

        // Add tip at opposite side
        &:before {
            border: 0 solid transparent
            if ($type == 'flag') {
                border-top-width: $border-height = ceil((($ribbon-line-height * $rem-base-actual) / 2) + pxify($ribbon-padding-top))
                border-bottom-width: ($border-height - 1px)
                border-{$ribbon-default-position}-width: $ribbon-flag-dimensions
                {$ribbon-opposite-position}: -(pxify($ribbon-flag-dimensions))
            } else if ($type == 'triangle') {
                border-top-width: $ribbon-triangle-dimensions
                border-{$ribbon-default-position}-width: $ribbon-triangle-dimensions
                {$ribbon-opposite-position}: -($ribbon-triangle-dimensions)
            }
            border-{$ribbon-opposite-position}-color: $bg // Set color if we have a .--opposite ribbon
            border-{$ribbon-default-position}-color: $bg
            content: ''
            display: block
            height: 0
            
            margin: 0
            position: absolute
            top: 0
            width: 0
        }
        &.ribbon--lrg:before {
            if ($type == 'flag') {
                border-top-width: $border-height = floor((($ribbon-line-height-lrg * $rem-base-actual) / 2) + pxify($ribbon-padding-top))
                border-bottom-width: ($border-height - 1px)
            } else if ($type == 'triangle') {
                border-top-width: $ribbon-triangle-dimensions-lrg
                border-{$ribbon-default-position}-width: $ribbon-triangle-dimensions-lrg
                {$ribbon-opposite-position}: -($ribbon-triangle-dimensions-lrg)
            }
        }
        &.ribbon--xlrg:before {
            if ($type == 'flag') {
                border-top-width: $border-height = floor((($ribbon-line-height-xlrg * $rem-base-actual) / 2) + pxify($ribbon-padding-top))
                border-bottom-width: ($border-height - 1px)
            } else if ($type == 'triangle') {
                border-top-width: $ribbon-triangle-dimensions-xlrg
                border-{$ribbon-default-position}-width: $ribbon-triangle-dimensions-xlrg
                {$ribbon-opposite-position}: -($ribbon-triangle-dimensions-xlrg)
            }
        }
    }

}

ribbon-opposite() {
    {$ribbon-opposite-position}: -($ribbon-backface-dimensions)
    {$ribbon-default-position}: auto
    text-align: $ribbon-opposite-position
    shadow-elevation('marker' + $opposite-direction)

    &:after {
        border-{$ribbon-opposite-position}-width: 0
        border-{$ribbon-default-position}-width: $ribbon-backface-dimensions
        {$ribbon-opposite-position}: 0
        {$ribbon-default-position}: auto
    }
}


if $include-html-ribbon-classes {
    .ribbon__wrap {
        ribbon-cont()
    }

    .ribbon {
        // load base ribbon styles
        ribbon-base()
        ribbon-style()

        // ribbon with tip
        &--flag {
            // ribbon-base()
            ribbon-style($type:$ribbon-flag-type)
        }

        // colored ribbons
        &--primary {
            ribbon-style($color: $white, $bg:$primary-color )
        }
        &--success {
            ribbon-style($color: $white, $bg:$success-color )
        }
        &--info {
            ribbon-style($color: $white, $bg:$info-color )
        }
        &--warning {
            ribbon-style($color: $warning-font-color, $bg:$warning-color )
        }
        &--alert {
            ribbon-style($color: $critical-font-color, $bg:$alert-color )
        }
        // colored flag ribbons
        &--flag.ribbon--primary {
            ribbon-style($color: $white, $bg:$primary-color, $type:$ribbon-flag-type)
        }
        &--flag.ribbon--success {
            ribbon-style($color: $white, $bg:$success-color, $type:$ribbon-flag-type)
        }
        &--flag.ribbon--info {
            ribbon-style($color: $white, $bg:$info-color, $type:$ribbon-flag-type)
        }
        &--flag.ribbon--warning {
            ribbon-style($color: $warning-font-color, $bg:$warning-color, $type:$ribbon-flag-type)
        }
        &--flag.ribbon--alert {
            ribbon-style($color: $critical-font-color, $bg:$alert-color, $type:$ribbon-flag-type)
        }
        
        // Sizing
        &--lrg {
            font-size: $ribbon-font-size-lrg
            
            &:after {
                top: (rem-calc($ribbon-line-height-lrg * $rem-base-actual) + (2 * $ribbon-padding-top) - rem-calc(1))
            }
        }
        &--xlrg {
            font-size: $ribbon-font-size-xlrg

            &:after {
                top: (rem-calc($ribbon-line-height-xlrg * $rem-base-actual) + (2 * $ribbon-padding-top) - rem-calc(3))
            }
        }

        // Left ribbon
        &--opposite,
        &--left {
            ribbon-opposite()
        }
        // left flag ribbon
        .ribbon__wrap--opposite .ribbon--flag,
        &--left.ribbon--flag {
            padding-{$ribbon-default-position}: $ribbon-padding-left
            padding-{$ribbon-opposite-position}: (strip-unit($ribbon-flag-padding) > 0) ? $ribbon-flag-padding : 0
            
            &:before {
                border-{$ribbon-opposite-position}-width: $ribbon-flag-dimensions
                border-{$ribbon-default-position}-width: 0
                {$ribbon-opposite-position}: auto
                margin: 0
                margin-{$ribbon-default-position}: -(pxify($ribbon-flag-dimensions)) //-((rem-calc($ribbon-flag-dimensions) - rem-calc(1)))
                {$ribbon-default-position}: 0
            }
        }
    }
}