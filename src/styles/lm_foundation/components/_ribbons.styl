/*================== RIBBON =========================*/

@require '_global'

//
// @variables
//

$include-html-ribbon-classes =              com_css.RIBBONS

$ribbon-font-size ?=                         fontsize(0.9rem)
$ribbon-font-family ?=                       $font-family-custom
$ribbon-font-weight ?=                       $font-weight-bold
$ribbon-font-color ?=                        $white
$ribbon-bg-color ?=                          $gray-base
$ribbon-text-transform ?=                    uppercase
$ribbon-padding-top ?=                       rem-calc(5)
$ribbon-padding-left ?=                      rem-calc(7)
$ribbon-line-height ?=                       1
$ribbon-backface-dimensions ?=               6px
$ribbon-flag-dimensions ?=                   6px
$ribbon-flag-padding ?=                      ($ribbon-padding-left - rem-calc($ribbon-flag-dimensions/2))
$ribbon-box-shadow ?=                        -1px 2px 10px rgba($black,0.1) // -5px 5px 10px rgba(0,0,0,0.1)
$ribbon-box-shadow-left ?=                   1px 2px 10px rgba($black,0.1) // -5px 5px 10px rgba(0,0,0,0.1)


//
// @mixins
//


ribbon-base() {
    box-shadow: $ribbon-box-shadow
    display: inline-block
    font-size: $ribbon-font-size
    font-weight: $ribbon-font-weight
    font_family($ribbon-font-family)
    line-height: $line-height = 1
    padding: $ribbon-padding-top $ribbon-padding-left // rem-calc(30 10 30)
    position: absolute
    right: -($ribbon-backface-dimensions)
    text-align: right
    text-transform: $ribbon-text-transform
    top: rem-calc(10)
    white-space: nowrap

    &:after {
        border: 0 solid transparent
        border-bottom-width: $ribbon-backface-dimensions
        border-left-width: $ribbon-backface-dimensions
        content: ''
        display: block
        height: 0
        margin: 0
        position: absolute
        right: 0
        top: (rem-calc($ribbon-line-height * $rem-base-actual) + (2*$ribbon-padding-top) - rem-calc(1))
        width: 0
        z-index: -(1) // NOTE: Immediate parent container MUST have a positive z-index value (e.g. 1) to make negative z-index work!!!
    }

}

ribbon-style($color = $ribbon-font-color, $bg = $ribbon-bg-color, $type = 'normal'){
    color: $color
    background-color: $bg

    &:after {
        border-left-color: darken($bg, 20%)
        border-right-color: darken($bg, 20%) // Set color if we have a .--left ribbon
    }

    if ($type == 'flag') {
        // If we have a left tip, minimize left padding so that left and right padding match optically
        padding-left: (strip-unit($ribbon-flag-padding) > 0) ? $ribbon-flag-padding : 0

        // Add tip at left side
        &:before {
            border: 0 solid transparent
            border-top-width: $border-height = floor((($ribbon-line-height * $rem-base-actual) / 2) + pxify($ribbon-padding-top))
            border-bottom-width: ($border-height - 1px) // correct minimal overlapping tip
            border-right-width: $ribbon-flag-dimensions
            border-left-color: $bg // Set color if we have a .--left ribbon
            border-right-color: $bg
            content: ''
            display: block
            height: 0
            left: 0
            margin: 0 0 0 (-(rem-calc($ribbon-flag-dimensions)))
            position: absolute
            top: 0
            width: 0
            
        }
    }

}

ribbon-left() {
    box-shadow: $ribbon-box-shadow-left
    left: -($ribbon-backface-dimensions)
    right: auto
    text-align: left

    &:after {
        border-left-width: 0
        border-right-width: $ribbon-backface-dimensions
        left: 0
        right: auto
    }
}


if $include-html-ribbon-classes {

    .ribbon {
        // load base ribbon styles
        ribbon-base()
        ribbon-style()

        // ribbon with tip
        &--flag {
            ribbon-base()
            ribbon-style($type:'flag')
        }

        // colored ribbons
        &--primary {
            ribbon-style($color: $white, $bg:$primary-color )
        }
        &--success {
            ribbon-style($color: $white, $bg:$success-color )
        }
        &--info {
            ribbon-style($color: $white, $bg:$info-color )
        }
        &--warning {
            ribbon-style($color: $warning-font-color, $bg:$warning-color )
        }
        &--alert {
            ribbon-style($color: $critical-font-color, $bg:$alert-color )
        }
        // colored flag ribbons
        &--flag.ribbon--primary {
            ribbon-style($color: $white, $bg:$primary-color, $type:'flag')
        }
        &--flag.ribbon--success {
            ribbon-style($color: $white, $bg:$success-color, $type:'flag')
        }
        &--flag.ribbon--info {
            ribbon-style($color: $white, $bg:$info-color, $type:'flag')
        }
        &--flag.ribbon--warning {
            ribbon-style($color: $warning-font-color, $bg:$warning-color, $type:'flag')
        }
        &--flag.ribbon--alert {
            ribbon-style($color: $critical-font-color, $bg:$alert-color, $type:'flag')
        }

        // Left ribbon
        &--left {
            ribbon-left()
        }
        // left flag ribbon
        &--left.ribbon--flag {
            padding-left: $ribbon-padding-left
            padding-right: (strip-unit($ribbon-flag-padding) > 0) ? $ribbon-flag-padding : 0
            
            &:before {
                border-left-width: $ribbon-flag-dimensions
                border-right-width: 0
                left: auto
                margin: 0 (-(rem-calc($ribbon-flag-dimensions))) 0 0
                right: 0
            }
        }
    }
}