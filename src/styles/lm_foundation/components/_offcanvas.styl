// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

@require '_global'
@require '_type'

//
// @variables
//

// Off Canvas Tab Bar Variables
$include-html-off-canvas-classes =          com_js.OFFCANVAS

$tabbar-bg ?=                                $charcoal-1
$tabbar-height ?=                            rem-calc(45)
$tabbar-icon-width ?=                        $tabbar-height
$tabbar-line-height ?=                       $tabbar-height
$tabbar-color ?=                             $white
$tabbar-middle-padding ?=                    (0 rem-calc(10))

// Off Canvas Divider Styles
$tabbar-left-section-border ?=               solid 1px darken($tabbar-bg, 50%)
$tabbar-right-section-border ?=              $tabbar-left-section-border

// Off Canvas Tab Bar Headers
$tabbar-header-color ?=                      $white
$tabbar-header-weight ?=                     $font-weight-bold
$tabbar-header-line-height ?=                $tabbar-height
$tabbar-header-margin ?=                     0

// Off Canvas Menu Variables
$off-canvas-width ?=                         rem-calc(250)
$off-canvas-height ?=                        rem-calc(300)
$off-canvas-bg ?=                            $tabbar-bg
$off-canvas-bg-hover ?=                      ((lightness($off-canvas-bg) > 65%) ? darken($off-canvas-bg, 30%) : lighten($off-canvas-bg, 20%))
$off-canvas-bg-active ?=                     ((lightness($off-canvas-bg) > 65%) ? darken($off-canvas-bg, 30%) : lighten($off-canvas-bg, 20%))

// Off Canvas Menu List Variables
$off-canvas-label-padding ?=                 rem-calc(5 15)
$off-canvas-label-color ?=                   $gray-dark-1
$off-canvas-label-text-transform ?=          uppercase
$off-canvas-label-font-size ?=               fontsize(1rem)
$off-canvas-label-font-weight ?=             $font-weight-bold
$off-canvas-label-bg ?=                      $gray-darker-3
$off-canvas-label-border-top ?=              1px solid lighten($off-canvas-label-bg, 15%)
$off-canvas-label-border-bottom ?=           none
$off-canvas-label-margin ?=                  0
$off-canvas-link-padding ?=                  rem-calc(10)
$off-canvas-link-color ?=                    $white
$off-canvas-link-font-family ?=              $font-family-custom
$off-canvas-link-font-size ?=                fontsize(0.9rem)
$off-canvas-link-font-weight ?=              $font-weight-bold
$off-canvas-link-text-transform ?=           uppercase
$off-canvas-link-border-bottom ?=            1px solid darken($off-canvas-bg, 25%)
$off-canvas-link-icon-type ?=               'svg' // 'text'
$off-canvas-back-bg ?=                       lighten($off-canvas-bg, 20%)
$off-canvas-back-color ?=                   $tabbar-bg
$off-canvas-back-border-top ?=               $off-canvas-label-border-top
$off-canvas-back-border-bottom ?=            $off-canvas-label-border-bottom
$off-canvas-back-hover-bg ?=                 darken($off-canvas-back-bg, 30%)
$off-canvas-back-hover-border-top ?=         1px solid lighten($off-canvas-label-bg, 14%)
$off-canvas-back-hover-border-bottom ?=      none

$off-canvas-list-form-padding ?=             rem-calc(10)

// Off Canvas Menu Icon Variables
$tabbar-menu-icon-color ?=                   $white
$tabbar-menu-icon-hover ?=                   darken($tabbar-menu-icon-color, 30%)

$tabbar-menu-icon-width ?=                   $tabbar-icon-width
$tabbar-menu-icon-height ?=                  $tabbar-height
$tabbar-menu-icon-padding ?=                 rem-calc(0 10)
$tabbar-menu-icon-text-indent ?=             ($tabbar-icon-width - rem-calc(5))

$tabbar-hamburger-icon-width ?=              rem-calc(16)
$tabbar-hamburger-icon-left ?=               false
$tabbar-hamburger-icon-top ?=                false
$tabbar-hamburger-icon-thickness ?=          1px
$tabbar-hamburger-icon-gap ?=                6px

// Off Canvas Back-Link Overlay
$off-canvas-overlay-transition ?=            true // background 300ms ease
$off-canvas-overlay-cursor ?=                $cursor-pointer-value
$off-canvas-overlay-background ?=            color_alpha($gray-light-1, .5) // false
$off-canvas-overlay-background-hover ?=      false // color_alpha($white, 0.05)

// Transition Variables
$off-canvas-transition-speed ?=              .4s
$menu-slide ?=                              'transform .4s ease'

//
// @mixins
//

// Basic properties for the content wraps
wrap-base() {
    position: relative
    width: 100%
}

// basic styles for off-canvas menu container
off-canvas-menu($position) {
    kill-flicker()
    * {
        kill-flicker()
    }

    -ms-overflow-style: -ms-autohiding-scrollbar
    -webkit-overflow-scrolling: touch
    background: $off-canvas-bg
    bottom: 0
    box-sizing(content-box)
    overflow-x: hidden
    overflow-y: auto
    position: absolute
    width: $off-canvas-width
    z-index: $zindex-off-canvas-menu

    single-transition('transform', $speed:$off-canvas-transition-speed, $ease:ease)

    if ($position == left) {
        translate-3d(-100%, 0, 0)
        left: 0
        // text-align: left
        top: 0
    }
    if ($position == right) {
        translate-3d(100%, 0, 0)
        right: 0
        // text-align: right
        top: 0
    }
    if ($position == top) {
        translate-3d(0,-100%,0)
        top: 0
        width: 100%
        height: $off-canvas-height
    }
    if ($position == bottom) {
        translate-3d(0,100%,0)
        bottom: 0
        width: 100%
        height: $off-canvas-height
    }

}

// OFF CANVAS WRAP
// Wrap visible content and prevent scroll bars
off-canvas-wrap() {
    kill-flicker()
    wrap-base()
    overflow: hidden

    &.move-right,
    &.move-left,
    &.move-bottom,
    &.move-top {
        min-height: 100%
        -webkit-overflow-scrolling: touch
    }
}

// INNER WRAP
// Main content area that moves to reveal the off-canvas nav
inner-wrap() {
    kill-flicker()
    wrap-base()
    clearfix()

    single-transition('transform', $speed:$off-canvas-transition-speed, $ease:ease)
}

// TAB BAR
// This is the tab bar base
tab-bar-base() {
    kill-flicker()

    // base styles
    background: $tabbar-bg
    color: $tabbar-color
    height: $tabbar-height
    line-height: $tabbar-line-height

    // make sure it's below the .exit-off-canvas link
    position: relative
    // z-index: 999

    // Typography
    h1,h2,h3,h4,h5,h6 {
        color: $tabbar-header-color
        font-weight: $tabbar-header-weight
        line-height: $tabbar-header-line-height
        margin: $tabbar-header-margin
        white-space: nowrap
    }
    h1,h2,h3,h4 {
        font-size: $h5-font-size
    }

    // avoid overlapping images
    img.logo {
        height: $tabbar-height
        max-height: 100%
    }
}

// SMALL SECTIONS
// These are small sections on the left and right that contain the off-canvas toggle buttons
tabbar-small-section($position) {
    height: $tabbar-height
    position: absolute
    top: 0
    width: $tabbar-icon-width
    if ($position == left) {
        border-right: $tabbar-left-section-border
        left: 0
    }
    if ($position == right) {
        border-left: $tabbar-right-section-border
        right:0
    }
}

tab-bar-section() {
    height: $tabbar-height
    padding: $tabbar-middle-padding
    position: absolute
    text-align: center
    top: 0

    +mediaquery($medium-up) {
        &.left {
            text-align: left
        }
        &.right {
            text-align: right
        }
    }

    // still need to make these non-presentational
    &.left {
        left: 0
        right: $tabbar-icon-width
    }
    &.right {
        left: $tabbar-icon-width
        right: 0
    }
    &.middle {
        left: $tabbar-icon-width
        right: $tabbar-icon-width
        // avoid overlapping images
        overflow: hidden
    }
}

// OFF CANVAS LIST
// This is the list of links in the off-canvas menu
off-canvas-list() {
    list-style-type: none
    margin:0
    padding:0

    li:not(.has-form) {
        label {
            background: $off-canvas-label-bg
            border-bottom: $off-canvas-label-border-bottom
            border-top: $off-canvas-label-border-top
            color: $off-canvas-label-color
            display: block
            font-size: $off-canvas-label-font-size
            font-weight: $off-canvas-label-font-weight
            margin: $off-canvas-label-margin
            padding: $off-canvas-label-padding
            text-transform: $off-canvas-label-text-transform
        }

        a:not(.btn) {
            border-bottom: $off-canvas-link-border-bottom
            color: $off-canvas-link-color
            display: block
            font-size: $off-canvas-link-font-size
            font-weight: $off-canvas-link-font-weight
            font_family($off-canvas-link-font-family)
            padding: $off-canvas-link-padding
            position: relative
            text-transform: $off-canvas-link-text-transform
            single-transition(background-color)

            &:hover {
                background: $off-canvas-bg-hover
            }

            &:active {
                background: $off-canvas-bg-active
            }
        }
    }

    > li.has-form {
        padding: $off-canvas-list-form-padding
    }
}

// BACK LINK
// This is an overlay that, when clicked, will toggle off the off canvas menu
back-link() {
    kill-flicker()

    // fill the screen
    -webkit-tap-highlight-color: color_alpha($black, 0)
    bottom: 0
    cursor: $off-canvas-overlay-cursor
    display: block
    left: 0
    opacity: 1
    position: absolute
    right: 0
    top: 0
    z-index: ($zindex-off-canvas-menu + 1)

    if ($off-canvas-overlay-background) {
        background-color: $off-canvas-overlay-background
    }

    if ($off-canvas-overlay-transition) {
        single-transition((background-color opacity), $speed:$off-canvas-transition-speed, $ease:ease)
    }

    if ($off-canvas-overlay-background) {
        +mediaquery($medium-up) {
            &:hover {
                background-color: $off-canvas-overlay-background-hover
            }
        }
    }
}

//
// Off-Canvas Submenu Classes
//
off-canvas-submenu($position) {
    kill-flicker()
    * { 
        kill-flicker()
    }
    background: $off-canvas-bg
    bottom: 0
    box-sizing: content-box
    margin: 0
    overflow-x: hidden
    overflow-y: auto
    position: absolute
    top: 0
    width: $off-canvas-width
    height: $off-canvas-height
    z-index: ($zindex-offcanvas - 1)
    -webkit-overflow-scrolling: touch
    if ($position == left) {
        translate-3d(-(100%), 0, 0)
        left: 0
    }
    if ($position == right) {
        translate-3d(100%, 0, 0)
        right: 0
    }
    if ($position == top) {
        translate3d(0,-100%,0)
        top: 0
        width: 100%
    }  
    if ($position == bottom) {
        translate3d(0,100%,0)
        bottom: 0
        width: 100%
    }
    single-transition('transform', $speed:$off-canvas-transition-speed, $ease:ease)

    //back button style like label
    .back > a {
        background-color: $off-canvas-back-bg
        border-bottom: $off-canvas-back-border-bottom
        border-top: $off-canvas-back-border-top
        color: $off-canvas-label-color
        font-weight: $off-canvas-label-font-weight
        margin: $off-canvas-label-margin
        padding: $off-canvas-label-padding
        // text-align: center
        text-transform: $off-canvas-label-text-transform

        &:hover {
            background-color: $off-canvas-back-hover-bg
            border-bottom: $off-canvas-back-hover-border-bottom
            border-top: $off-canvas-back-hover-border-top
        }

        if ($off-canvas-link-icon-type == 'text') {
        // TEXT ARROWS USING PSEUDO CLASS
            if ($position == right) {
                if ($text-direction == rtl) {
                    &:before {
                        icon-double-arrows($position: left)
                    }
                } else {
                    &:after {
                        icon-double-arrows($position: right)
                    }
                }
            }
            if ($position == left) {
                if ($text-direction == rtl) {
                    &:after {
                        icon-double-arrows($position: right)
                    }
                } else {
                    &:before {
                        icon-double-arrows($position: left)
                    }
                }
            }
        // SVG ARROWS
        } else if ($off-canvas-link-icon-type == 'svg') {
            if ($position == right) {
                if ($text-direction == rtl) {
                    icon-svg-arrow($position: left)
                } else {
                    icon-svg-arrow($position: right)
                }
            }
            if ($position == left) {
                if ($text-direction == rtl) {
                    icon-svg-arrow($position: right)
                } else {
                   icon-svg-arrow($position: left)
                }
            }
        }
    }
}
//Left double angle quote or Right double angle quote chars
icon-double-arrows($position){
    if ($position == left) {
        content: '\AB'
        margin-left: rem-calc(5)
    }
    if ($position == right) {
        content: '\BB'
        margin-right: rem-calc(5)
    }
    display: inline
    position: absolute
    right: rem-calc(10)
    top: 50%
    margin-top: -(rem-calc(10))
}
// SVG Background Icon
icon-svg-arrow($position){
    svg-background($file:'arrows_'+$position+'.svg', $shapes:('polyline' 'polygon'), $size:rem-calc(18), $stroke-width:$svg-stroke-width-small, $stroke:$off-canvas-link-color, $position-x:$position)
}

//
// @styles
//

// DEFAULT CLASSES

if $include-html-off-canvas-classes {

    .off-canvas-wrap {
        off-canvas-wrap()
    }
    .inner-wrap {
        inner-wrap()
    }

    .tab-bar {
        tab-bar-base()
    }

    .left-small {
        tabbar-small-section($position: left)
    }
    .right-small {
        tabbar-small-section($position: right)
    }

    .tab-bar-section {
        tab-bar-section()
    }

    // MENU BUTTON
    // This is a little bonus. You don't need it for off canvas to work. Mixins to be written in the future.
    .tab-bar .menu-icon {
        color: $tabbar-menu-icon-color
        display: inline-block
        font-weight: $font-weight-bold
        font_family($font-family-custom)
        height: $tabbar-menu-icon-height
        min-width: @height
        padding: $tabbar-menu-icon-padding
        position: relative
        text-indent: $tabbar-menu-icon-text-indent
        text-transform: uppercase
        translate-3d(0, 0, 0)

        // @include for the hamburger menu-icon
        //
        // Arguments as follows: ($width, $left, $top, $thickness, $gap, $color, $hover-color)
        // $width - Width of hamburger icon in rem Default: $tabbar-hamburger-icon-width.
        // $left - If false, icon will be centered horizontally || explicitly set value in rem Default: $tabbar-hamburger-icon-left= False
        // $top - If false, icon will be centered vertically || explicitly set value in rem Default: = False
        // $thickness - thickness of lines in hamburger icon, set value in px Default: $tabbar-hamburger-icon-thickness = 1px
        // $gap - spacing between the lines in hamburger icon, set value in px Default: $tabbar-hamburger-icon-gap = 6px
        // $color - icon color Default: $tabbar-menu-icon-color
        // $hover-color - icon color when hovered Default: $tabbar-menu-icon-hover
        // $offcanvas - Set to true
        hamburger($tabbar-hamburger-icon-width, $tabbar-hamburger-icon-left, $tabbar-hamburger-icon-top, $tabbar-hamburger-icon-thickness, $tabbar-hamburger-icon-gap, $tabbar-menu-icon-color, $tabbar-menu-icon-hover, true)

        &.is-icononly {
            display: block
            width: $tabbar-menu-icon-width
        }
    }

    .left-off-canvas-menu {
        off-canvas-menu($position: left)
    }
    .right-off-canvas-menu {
        off-canvas-menu($position: right)
    }
    .top-off-canvas-menu {
        off-canvas-menu($position: top)
    }
    .bottom-off-canvas-menu {
        off-canvas-menu($position: bottom)
    }

    ul.off-canvas-list {
        off-canvas-list()
    }

    // ANIMATION CLASSES
    // These classes are added with JS and trigger the actual animation.
    .exit-off-canvas {
        opacity: 0
    }

    .move-right {
        > .inner-wrap {
            translate-3d($off-canvas-width, 0, 0)
            & > section[class*='main'] {
                padding-left: rem-calc(10)
            } 
        }
        .exit-off-canvas {
            back-link()
        }
        .left-off-canvas-menu {           
            shadow-elevation('navdrawerleft')
        }
    }

    .move-left {
        > .inner-wrap {
            translate-3d(-($off-canvas-width), 0, 0)
            > section[class*='main'] {
                padding-right: rem-calc(10)
            }

        }
        .exit-off-canvas {
            back-link()
        }
        .right-off-canvas-menu {           
            shadow-elevation('navdrawerright')
        }
    }
    .move-top {
        > .inner-wrap {
            translate3d(0,-($off-canvas-height),0)
        }
        .exit-off-canvas {
            back-link()
        }
    }
    .move-bottom {
        > .inner-wrap {
            translate3d(0,($off-canvas-height),0)
        }
        .exit-off-canvas {
            back-link()
        }
    }

    .offcanvas-overlap {
        .left-off-canvas-menu,
        .right-off-canvas-menu,
        .top-off-canvas-menu,
        .bottom-off-canvas-menu {
            transform: none
            z-index: $zindex-offcanvas
        }
        .exit-off-canvas {
            back-link()
        }
        .left-off-canvas-menu {           
            shadow-elevation('navdrawerleft')
        }
        .right-off-canvas-menu {           
            shadow-elevation('navdrawerright')
        }
    }
    .offcanvas-overlap-left .right-off-canvas-menu,
    .offcanvas-overlap-right .left-off-canvas-menu,
    .offcanvas-overlap-bottom .bottom-off-canvas-menu,
    .offcanvas-overlap-top .top-off-canvas-menu {
        transform: none
        z-index: $zindex-offcanvas
    }
    .offcanvas-overlap-left .right-off-canvas-menu {
        shadow-elevation('navdrawerright')
    }
    .offcanvas-overlap-right .left-off-canvas-menu{
        shadow-elevation('navdrawerleft')
    }

    // Older browsers
    .no-csstransforms {
        .left-off-canvas-menu {
            left: -($off-canvas-width)
        }
        .right-off-canvas-menu {
            right: -($off-canvas-width)
        }
        .top-off-canvas-menu {
            top: -($off-canvas-height)
        }
        .bottom-off-canvas-menu {
            bottom: -($off-canvas-height)
        }

        .move-left > .inner-wrap {
            right: $off-canvas-width
        }
        .move-right > .inner-wrap {
            left: $off-canvas-width
        }
        .move-top > .inner-wrap {
            right: $off-canvas-height
        }
        .move-bottom > .inner-wrap {
            left: $off-canvas-height
        }
    }

    .left-submenu {
        off-canvas-submenu($position: left)
        &.move-right,
        &.offcanvas-overlap-right,
        &.offcanvas-overlap {
            translate-3d(0%, 0, 0)
        }
    }

    .right-submenu {
        off-canvas-submenu($position: right)
        &.move-left,
        &.offcanvas-overlap-left,
        &.offcanvas-overlap {
            translate-3d(0%, 0, 0)
        }
    }

    .top-submenu {
        off-canvas-submenu($position: top)
        &.move-bottom,
        &.offcanvas-overlap-bottom,
        &.offcanvas-overlap {
            translate-3d(0%, 0, 0)
        }
    }

    .bottom-submenu {
        off-canvas-submenu($position: bottom)
        &.move-top,
        &.offcanvas-overlap-top,
        &.offcanvas-overlap {
            translate-3d(0%, 0, 0)
        }
    }

    if ($text-direction == rtl) {
        .left-off-canvas-menu ul.off-canvas-list li.has-submenu > a {
            if ($off-canvas-link-icon-type == 'text') {
                &:before {
                    icon-double-arrows($position: left)
                }
            } else {
                icon-svg-arrow($position: left)
            }
        }
        .right-off-canvas-menu ul.off-canvas-list li.has-submenu > a {
            if ($off-canvas-link-icon-type == 'text') {
                &:after {
                    icon-double-arrows($position: right)
                }
            } else {
                icon-svg-arrow($position: riight)
            }
        }
    } else {
        .left-off-canvas-menu ul.off-canvas-list li.has-submenu > a {
            if ($off-canvas-link-icon-type == 'text') {
                &:after {
                    icon-double-arrows($position: right)
                }
            } else {
                icon-svg-arrow($position: right)
            }
        }
        .right-off-canvas-menu ul.off-canvas-list li.has-submenu > a {
            if ($off-canvas-link-icon-type == 'text') {
                &:before {
                    icon-double-arrows($position: left)
                }
            } else {
                icon-svg-arrow($position: left)
            }
        }
    }
}