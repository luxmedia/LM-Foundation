// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

@require '_global'

//
// @Variables
//

$include-html-block-grid-classes =          com_css.BLOCKGRID
$include-xl-html-block-grid-classes ?=       true

// the maximum number of block grid elements per row
$block-grid-elements ?=                      12
$block-grid-default-spacing ?=               rem-calc(20)
$align-block-grid-to-grid ?=                 false

if $align-block-grid-to-grid {
    $block-grid-default-spacing = $column-gutter
}

// Enables media queries for block-grid classes. Set to false if writing semantic HTML.
$block-grid-media-queries ?=                 true


//
// Block Grid Mixins
//

// Create a custom block grid
//
// $per-row - # of items to display per row. Default: false.
// $spacing - # of ems to use as padding on each block item. Default: rem-calc(20).
// $base-style - Apply a base style to block grid. Default: true.
block-grid($per-row = false, $spacing = $block-grid-default-spacing, $include-spacing = true, $base-style = true) {

    if $base-style {
        clearfix()
        display: block
        if $align-block-grid-to-grid {
            margin: 0
        } else {
            margin: 0 (-($spacing) / 2)
        }
        padding: 0

        > li {
            display: block
            float: $default-float
            height: auto
            if $include-spacing {
                padding: 0 ($spacing / 2) $spacing
            }
        }
    }

    if $per-row {
        > li {
            list-style: none
            if $include-spacing {
                padding: 0 ($spacing / 2) $spacing
            }
            width: (100% / $per-row)

            &:nth-of-type(1n) { 
                clear: none
            }
            &:nth-of-type({$per-row}n+1) {
                clear: both
            }
            if $align-block-grid-to-grid {
                block-grid-aligned($per-row, $spacing)
            }
        }
    }
}

block-grid-aligned($per-row, $spacing) {
    for $i in 1..$block-grid-elements {
        if ($per-row >= $i) {
            $grid-column = ('+' + $i)
            if ($per-row == $i) {
                $grid-column = ''
            }
            &:nth-of-type({$per-row}n{unquote($grid-column)}) {
                padding-left: ($spacing - (($spacing / $per-row) * ($per-row - ($i - 1))))
                padding-right: ($spacing - (($spacing / $per-row) * $i))
            }
        }
    }
}

// Generate presentational markup for block grid.
//
// $size - Name of class to use, i.e. "large" will generate .large-block-grid-1, .large-block-grid-2, etc.
block-grid-html-classes($size,$include-spacing) {
    for $i in 1..$block-grid-elements {
        .{$size}-block-grid-{($i)} {
            block-grid($i,$block-grid-default-spacing,$include-spacing,false)
        }
    }
}

//
// @styles
//
if $include-html-block-grid-classes {

    [class*='block-grid-'] { 
        block-grid()
    }

    if $block-grid-media-queries {
        +mediaquery($small-up) {
            block-grid-html-classes($size:sml,$include-spacing:false)
        }

        +mediaquery($medium-up) {
            block-grid-html-classes($size:med,$include-spacing:false)
        }

        +mediaquery($large-up) {
            block-grid-html-classes($size:lrg,$include-spacing:false)
        }

        if $include-xl-html-block-grid-classes {
            +mediaquery($xlarge-up) {
               block-grid-html-classes($size:xlrg,$include-spacing:false)
            }

            +mediaquery($xxlarge-up) {
                block-grid-html-classes($size:xxlrg,$include-spacing:false)
            }
        }
    }
}