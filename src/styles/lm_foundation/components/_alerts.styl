// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

@require '_global'

//
// @variables
//

$include-html-alert-classes =               com_js.ALERT
$include-html-alert-alt-classes ?=           false

// alert padding.
$alert-padding-top ?=                        rem-calc(14)
$alert-padding-default-float ?=              $alert-padding-top
$alert-padding-opposite-direction ?=         ($alert-padding-top * 1.5)
$alert-padding-bottom ?=                     $alert-padding-top
$alert-padding ?=                            ($alert-padding-top $alert-padding-opposite-direction $alert-padding-bottom $alert-padding-default-float)

// text style.
$alert-font-weight ?=                        $font-weight-normal
$alert-font-size ?=                          fontsize(1.2rem)
$alert-font-color ?=                         $white
$alert-font-color-alt ?=                     lightness($secondary-color, 20%)
$alert-font-color-warning ?=                 $warning-font-color
$alert-font-color-critical ?=                $critical-font-color

// close hover effect.
$alert-function-factor ?=                    -(14%)

// border styles.
$alert-border-style ?=                       solid
$alert-border-width ?=                       (2px 2px 2px 10px) // (1px 1px 1px 5px)
$alert-border-color ?=                       scale-color($primary-color, $alert-function-factor)
$alert-bottom-margin ?=                      rem-calc(20)

// style the close buttons
$alert-close-background ?=                   transparent
$alert-close-color ?=                        $charcoal-1
$alert-close-font-size ?=                    fontsize(2rem)
$alert-close-opacity ?=                      .3
$alert-close-opacity-hover ?=                .5
$alert-close-padding ?=                      0 // rem-calc(0 10 10)
$alert-close-position ?=                     rem-calc(4)
$alert-close-top ?=                          50%
$alert-close-width ?=                        rem-calc(35)

$alert-bg-icosize ?=                        rem-calc(24)

// border radius
$alert-radius ?=                             $global-radius

$alert-transition-speed ?=                   .3s
$alert-transition-ease ?=                    ease-out


//
// @mixins
//

// We use this mixin to create a default alert base.
alert-base() {
    border-style: $alert-border-style
    border-width: $alert-border-width
    display: block
    font-weight: $alert-font-weight
    margin-bottom: $alert-bottom-margin
    position: relative
    svg-background($size:$alert-bg-icosize, $position-x:$default-float)
    single-transition(opacity, $speed:$alert-transition-speed, $ease:$alert-transition-ease)
}

alert-size($padding = $alert-padding, $font-size = $alert-font-size, $full-width = false) {
    padding: $alert-padding
    font-size: $alert-font-size

    if $full-width {
        // padding-right: 0
        // padding-left: 0
        // width: 100%
        display: block
    }

    // Space for bg icon
    padding-{$default-float}: (2 * $alert-bg-icosize)
}

// We use this mixin to add alert styles
//
// $bg - The background of the alert. Default: $primary-color.
alert-style($bg = $primary-color, $font-color = $alert-font-color, $border-color = $primary-color) {

    background-color: $bg

    if $border-color {
        border-color: $border-color
    }

    // Control the text color for you based on the background color.
    if (lightness($bg) > 70% && $font-color == $alert-font-color) {
        color: $fcol = $alert-font-color-alt
    } else {
        color: $fcol = $font-color
    }
    
    // adapt color of links and other elements inside of alert
    p, small, strong, h1, h2, h3, h4, h5 {
        color: $fcol
    }
    a {
        color: scale-color($fcol, -25%)
        &:hover {
            color: scale-color($fcol, -50%)
        }
    }
    .btn {
        margin-bottom: 0
    }
}

// We use this to create the close button.
alert-close() {
    if $alert-close-background {
        background-color: $alert-close-background
    }
    font-size: $alert-close-font-size
    line-height: .9
    margin-top: -($alert-close-padding[0]+($alert-close-font-size/2))
    opacity: $alert-close-opacity
    padding: $alert-close-padding
    position: absolute
    text-align: center
    top: $alert-close-top
    width: $alert-close-width
    {$opposite-direction}: $alert-close-position
    // color: $alert-close-color
    &:hover,
    &:focus {
        opacity: $alert-close-opacity-hover
    }
}

// We use this to quickly create alerts with a single mixin.
//
// $bg - Background of alert. Default: $primary-color.
// $radius - Radius of alert box. Default: false.
alert($bg = $primary-color, $radius = false) {
    alert-base()
    alert-style($bg)
    radius($radius)
}


//
// @styles
//
if $include-html-alert-classes {
    .alert {
        alert()
        alert-size()

        .alert__close:not(.btn) {
            alert-close()
        }

        &--rad {
            radius($alert-radius)
        }
        &--rnd {
            radius($global-rounded)
        }

        &--exp {
            alert-size($full-width: true)
        }

        // DEFAULT ALERT STYLE - light soft bg, colored typo
        if $include-primary-2-color-styles {
            &--primary-2 {
                alert-style($bg: lightness($primary-2-color, 90%), $font-color: lightness($primary-2-color, 30%), $border-color: lightness($primary-2-color, 75%))
                svg-background($file:'lm/00020-info.svg', $shapes:('path' 'line'), $size:false, $stroke-width:$svg-stroke-width-medium, $stroke:$primary-2-color, $stroke-hover:false, $repeat:false, $position-x:false)
            }
        }
        &--secondary {
            alert-style($bg: lighten($secondary-color, 80%), $font-color: darken($secondary-color, 40%), $border-color: $secondary-color)
            svg-background($file:'lm/00020-info.svg', $shapes:('path' 'line'), $size:false, $stroke-width:$svg-stroke-width-medium, $stroke:$secondary-color, $stroke-hover:false, $repeat:false, $position-x:false)
        }
        &--success {
            alert-style($bg: lightness($success-color, 90%), $font-color: lightness($success-color, 30%), $border-color: lightness($success-color, 75%))
            svg-background($file:'lm/00002-circle_check.svg', $shapes:('polyline' 'circle'), $size:false, $stroke-width:$svg-stroke-width-medium, $stroke:$success-color, $stroke-hover:false, $repeat:false, $position-x:false)
        }
        &--info {
            alert-style($bg: lightness($info-color, 90%), $font-color: lightness($info-color, 30%), $border-color: lightness($info-color, 75%))
            svg-background($file:'lm/00020-info.svg', $shapes:('path' 'line'), $size:false, $stroke-width:$svg-stroke-width-medium, $stroke:$info-color, $stroke-hover:false, $repeat:false, $position-x:false)
        }            
        &--warning {
            alert-style($bg: lightness($warning-color, 90%), $font-color: $alert-font-color-warning, $border-color: lightness($warning-color, 75%))
            svg-background($file:'lm/00016-exclamation.svg', $shapes:('path' 'line'), $size:false, $stroke-width:$svg-stroke-width-medium, $stroke:$warning-color, $stroke-hover:false, $repeat:false, $position-x:false)
        }
        &--critical {
            alert-style($bg: lighten($alert-color, 80%), $font-color: $alert-font-color-critical, $border-color: $critical-color)
            svg-background($file:'lm/00038-ban.svg', $shapes:('path' 'line'), $size:false, $stroke-width:$svg-stroke-width-medium, $stroke:$critical-color, $stroke-hover:false, $repeat:false, $position-x:false)
        }

        // ALTERNATIVE ALERT STYLE - intense filled bg and inverted typo
        if $include-html-alert-alt-classes {
            &--success-alt {
                alert-style($bg:$success-color, $border-color:$success-color)
            }
            &--secondary-alt {
                alert-style($bg:$secondary-color, $border-color:$secondary-color)
            }
            &--info-alt {
                alert-style($bg:$info-color, $border-color:$info-color)
            }            
            &--warning-alt {
                alert-style($bg: $warning-color, $font-color: $alert-font-color-warning, $border-color:$warning-color)
            }
            &--critical-alt {
                alert-style($bg: $alert-color, $font-color: $alert-font-color-critical, $border-color:$alert-color)
            }
        }

        &.is-closed {
            opacity: 0
        }
        &.is-closeable {
            padding-{$opposite-direction}: ($alert-padding-top + $alert-close-width)
        }
    }
}