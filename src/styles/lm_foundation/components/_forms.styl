// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

@require "_global"
@require "_buttons"
@require "_alerts"

//
// @variables
//

$include-html-form-classes =                com_css.FORMS

// set the base for lots of form spacing and positioning styles
$form-spacing ?=                             rem-calc(20)

// style the labels in different ways
$input-font-family ?=                        inherit
$input-font-color ?=                         $font-color-body
$input-font-color-hover ?=                   $font-color-body
$input-font-color-inv ?=                     $white
$input-font-color-hover-inv ?=               $white
$input-font-size ?=                          fontsize(1.1rem)
$input-line-height ?=                        $base-line-height
$input-padding ?=                            ($form-spacing / 2) $form-spacing
$input-font-size-computed ?=                 unit((floor(($input-line-height * $input-font-size), 4)), 'rem')
$input-font-weight ?=                        $font-weight-normal
$input-bg-color ?=                           transparent // $white
$input-bg-color-inv ?=                       transparent
$input-focus-bg-color ?=                     $input-bg-color
$input-focus-bg-color-inv ?=                 $input-bg-color-inv
$input-border-color ?=                       color_alpha($black, .2) // darken($white, 20%)
$input-border-color-hover ?=                 color_alpha($black, .4) // darken($white, 40%)
$input-border-color-focus ?=                 color_alpha($black, .4) // darken($white, 40%)
$input-border-color-inv ?=                   color_alpha($white, .65)
$input-border-color-focus-inv ?=             $white
$input-border-style ?=                       solid
$input-border-width ?=                       1px 0 1px 0
$input-border-width-focus ?=                 0 0 2px 0
$input-border-radius ?=                      $global-radius
$input-disabled-bg ?=                        transparent
$input-disabled-cursor ?=                    $cursor-disabled-value
$input-box-shadow ?=                         false // inset 0 1px 2px color_alpha(0,0,0,.1)
$input-include-glowing-effect ?=             false
$input-element-height ?=                     ($input-font-size-computed + $form-spacing - rem-calc(1))

$placeholder-color ?=                        $font-color-hint
$placeholder-color-hover ?=                  darken($font-color-hint, 15%)
$placeholder-color-inv ?=                    $font-color-hint-inv
$placeholder-color-hover-inv ?=              $white

// Select variables
$select-style-like-input ?=                  true // flase
$select-bg-color ?=                          $input-bg-color
$select-bg-color-inv ?=                      $input-bg-color-inv
$select-hover-bg-color ?=                    $select-bg-color
$select-hover-bg-color-inv ?=                $select-bg-color-inv
if $select-style-like-input {
    $select-border-width ?=                      $input-border-width
} else {
    $select-border-width ?=                      1px
}
$select-border-color ?=                      $input-border-color
$select-border-color-focus ?=                $input-border-color-focus
$select-border-color-inv ?=                  $input-border-color-inv
$select-border-color-focus-inv ?=            $input-border-color-focus-inv
$select-padding ?=                           $input-padding
$select-padding-arrow ?=                     rem-calc(30)

$form-label-pointer ?=                       pointer
$form-label-font-size ?=                     fontsize(.8rem)
$form-label-font-weight ?=                   $font-weight-normal
$form-label-ui-font-weight ?=                $font-weight-normal
$form-label-line-height ?=                   1.5
$form-label-font-color ?=                    $placeholder-color // $gray-medium-2
$form-label-font-color-hover ?=              $input-font-color-hover
$form-label-inv-font-color ?=                color_alpha($white, .75)
$form-label-inv-font-color-hover ?=          $white
$form-label-text-transform ?=                false // uppercase
$form-label-small-transform ?=               capitalize
$form-label-small-font-size ?=               fontsize(.75rem)
$form-label-bottom-margin ?=                 0
$form-label-bottom-padding ?=                rem-calc(4)
$form-label-required-font-color ?=           $primary-color
$form-label-valid-font-color ?=              $success-color

$form-label-required-color ?=                $font-color-caption
$form-label-required-font-size ?=            fontsize(2.4rem)
$form-label-required-font-style ?=           normal
$form-label-required-position ?=             absolute
$form-label-required-right ?=                -(rem-calc(5))
$form-label-required-top ?=                  rem-calc(18)

$input-checkbox-width ?=                     14px
$input-checkbox-bg ?=                        $white
$input-checkbox-bg-hover ?=                  $gray-medium-2
$input-checkbox-bg-checked ?=                $primary-color
$input-checkbox-inner-padding ?=             2px
$input-checkbox-border-radius ?=             2px
$input-checkbox-border-width ?=              2px
$input-checkbox-border-color ?=              $icon-color-normal
$input-checkbox-border-color-hover ?=        $icon-color-hover
$input-checkbox-border-color-checked ?=      $icon-color-hover

// style the fieldset border and spacing.
$fieldset-bg-color ?=                        $white // $gray-lighter-3
$fieldset-border ?=                          true // false
$fieldset-border-style ?=                    solid
$fieldset-border-width ?=                    1px
$fieldset-border-color ?=                    $separator-color
$fieldset-padding ?=                         rem-calc(20)
$fieldset-margin ?=                          rem-calc(18 0)

$buttonset-include ?=                        true
$buttonset-bg-padding ?=                     rem-calc(10 20)
$buttonset-text-align ?=                     $opposite-direction
$buttonset-bg-color ?=                       lightness($gray-base, 94%) // color_alpha($black, .05)
$buttonset-border-color ?=                   color_alpha($black, .05)
$buttonset-bg-color-inv ?=                   color_alpha($white, .1)
$buttonset-border-color-inv ?=               color_alpha($white, .1)

$form-label-for-font-color ?=                transparent // $fieldset-bg-color
$form-label-for-font-color-valid ?=          $placeholder-color
$form-label-for-font-color-valid-inv ?=      $placeholder-color-inv

// style the legends when you use them
$legend-bg ?=                                $white
$legend-font-color ?=                        $font-color-subheading // $font-color-caption
$legend-font-family ?=                       $font-family-custom
$legend-font-size ?=                         fontsize(.9rem)
$legend-font-weight ?=                       $font-weight-bold
$legend-text-transform ?=                    uppercase
$legend-padding ?=                           rem-calc(0 5)

// style the prefix and postfix input elements
$input-prefix-bg ?=                          darken($white, 5%)
$input-prefix-border-color ?=                darken($white, 20%)
$input-prefix-border-size ?=                 1px
$input-prefix-border-type ?=                 solid
$input-prefix-overflow ?=                    visible // hidden
$input-prefix-font-color ?=                  $font-color-body
$input-prefix-font-color-inv ?=              $white

// We use this setting to turn on/off HTML5 number spinners (the up/down arrows)
$input-number-spinners ?=                    false // true

// style the error states for inputs and labels
$input-error-message-padding ?=              rem-calc(2 5)
$input-error-message-top ?=                  -(1px)
$input-error-message-font-size ?=            fontsize(.7rem)
$input-error-message-font-weight ?=          $font-weight-bold
$input-error-message-font-style ?=           normal
$input-error-message-font-transform ?=       uppercase
$input-error-message-font-color ?=           $critical-font-color
$input-error-message-bg-color ?=             $critical-font-color
$input-error-message-font-color-alt ?=       $white

// style the glowing effect of inputs when focused
$glowing-effect-fade-time ?=                 .45s
$glowing-effect-color ?=                     $input-border-color-focus

// We use this to style the transition when inputs are focused and when the glowing effect is disabled.
$input-transition-fade-time ?=               .24s
$input-transition-fade-timing-function ?=    linear



//
// @MIXINS
//

// We use this mixin to give us form styles for rows inside of forms
form-row-base() {
    .row {
        margin: 0 ((-($form-spacing)) / 2)

        .col {
            padding: 0 ($form-spacing / 2)
        }

        // Use this to collapse the margins of a form row
        &--collapse {
            margin: 0

            .col {
                padding: 0
            }
            input {
                side-radius($opposite-direction, 0)
            }

        }
    }
    input.col,
    textarea.col {
        padding-{$default-float}: ($form-spacing / 2)
    }
}

// @MIXIN
//
// Give all basic form elements their style
form-element() {

    ::-webkit-input-placeholder {
        color: $placeholder-color
    }
    :-moz-placeholder {
       color: $placeholder-color
       opacity: 1
    }
    ::-moz-placeholder {
       color: $placeholder-color
       opacity: 1
    }
    :-ms-input-placeholder {
       color: $placeholder-color
    }

    background-color: $input-bg-color
    border: 1px $input-border-style transparent
    border-width: $input-border-width
    border-bottom-color: $input-border-color
    if ($input-box-shadow != false) {
        box-shadow: $input-box-shadow
    }
    box-sizing(border-box)
    color: $input-font-color
    display: block
    font-size: $input-font-size
    font-weight: $input-font-weight
    font_family($input-font-family)
    line-height: $input-line-height
    margin: 0 0 $form-spacing 0
    padding: $input-padding
    width: 100%
    
    if $input-include-glowing-effect {
        block-glowing-effect(focus, $glowing-effect-fade-time, $glowing-effect-color)
    }
    // Basic focus styles
    &:focus {
        background-color: $input-focus-bg-color
        border-bottom-color: $input-border-color-focus
        if (($input-border-width-focus != false) && ($input-border-width-focus != $input-border-width)) {
            border-width: $input-border-width-focus
        }
        if (!$input-include-glowing-effect) {
            box-shadow: none
        }
        color: $input-font-color-hover
        outline: none
    }
    &:hover {
        border-bottom-color: $input-border-color-hover
        &::-webkit-input-placeholder {
            color: $placeholder-color-hover
        }
        &:-moz-placeholder {
           color: $placeholder-color-hover
        }
        &::-moz-placeholder {
           color: $placeholder-color-hover
        }
        &:-ms-input-placeholder {
           color: $placeholder-color-hover
        }
    }

    // Disabled styles
    &:disabled,
    &[disabled],
    &[readonly],
    fieldset[disabled] & {
        &,
        &:hover {
            background-color: $input-disabled-bg
            border-style: dotted
            cursor($input-disabled-cursor)
        }
    }

}

// @MIXIN
//
// Inverted color scheme for inputs (e.g. on dark color scopes)
form-element-inv() {
    background-color: $input-bg-color-inv
    border-bottom-color: $input-border-color-inv
    color: $input-font-color-inv
    &::-webkit-input-placeholder {
        color: $placeholder-color-inv
    }
    &:-moz-placeholder {
       color: $placeholder-color-inv
    }
    &::-moz-placeholder {
       color: $placeholder-color-inv
    }
    &:-ms-input-placeholder {
       color: $placeholder-color-inv
    }

    &:hover,
    &:focus {
        background-color: $input-focus-bg-color-inv
        border-bottom-color: $input-border-color-focus-inv
        color: $input-font-color-hover-inv
        &::-webkit-input-placeholder {
            color: $placeholder-color-hover-inv
        }
        &:-moz-placeholder {
           color: $placeholder-color-hover-inv
        }
        &::-moz-placeholder {
           color: $placeholder-color-hover-inv
        }
        &:-ms-input-placeholder {
           color: $placeholder-color-hover-inv
        }
    }
}

// @MIXIN
//
// We use this mixin to create form labels
//
// $alignment - Alignment options. Default: false. Options: [right, inline, false]
// $base-style - Control whether or not the base styles come through. Default: true.
form-label($alignment = false, $base-style = true) {

    // Control whether or not the base styles come through.
    if $base-style {
        antialiased()
        color: $form-label-font-color
        display: block
        font-size: $form-label-font-size
        font-weight: $form-label-font-weight
        line-height: $form-label-line-height
        margin-bottom: $form-label-bottom-margin
        padding-bottom: $form-label-bottom-padding

        if $form-label-text-transform {
            text-transform: $form-label-text-transform
        }

        &[for] {
            color: $form-label-for-font-color
            cursor($form-label-pointer)
            position: relative

            > em {
                color: $form-label-required-color
                font-size: $form-label-required-font-size
                font-style: $form-label-required-font-style
                position: $form-label-required-position
                top: $form-label-required-top
                {$opposite-direction}: $form-label-required-right
            }

            &.is-valid {
                color: $form-label-for-font-color-valid

                &.inv {
                    color: $form-label-for-font-color-valid-inv
                }

                > em {
                    display: none
                }
            }

        }

    }

    // Alignment options
    if ($alignment == right) {
        float: none !important
        text-align: right
    }
    else if ($alignment == inline) {
        margin: 0 0 $form-spacing 0
        padding: (($form-spacing / 2) + rem-calc($input-border-width)) 0
    }
}

// We use this mixin to create postfix/prefix form Labels
prefix-postfix-base() {
    border-style: $input-prefix-border-type
    border-width: $input-prefix-border-size
    display: block
    font-size: $form-label-font-size
    height: ($input-font-size + $form-spacing - rem-calc(1))
    line-height: ($input-font-size + $form-spacing - rem-calc(1))
    overflow: $input-prefix-overflow
    padding-bottom: 0
    padding-top: 0
    position: relative
    text-align: center
    width: 100%
    z-index: 2
}

// @MIXIN
//
// We use this mixin to create prefix label styles
// $bg - Default:$input-prefix-bg || scale-color($white, $lightness: -5%) !default
// $is-button - Toggle position settings if prefix is a button. Default:false
//
prefix($bg = $input-prefix-bg, $border = $input-prefix-border-color, $is-button = false) {

    if $bg {
        background: $bg
        border-{$opposite-direction}: none

        // Control the font color based on background brightness
        if (light($bg) || $bg == yellow) {
            color: $input-prefix-font-color
        } else {
            color: $input-prefix-font-color-inv
        }
    }

    if ($border != false) {
        border-color: $border
    }

    if $is-button {
        border: none
        padding-bottom: 0
        padding-top: 0
        padding-{$default-float}: 0
        padding-{$opposite-direction}: 0
        text-align: center
    }

}

// @MIXIN
//
// We use this mixin to create postfix label styles
// $bg - Default:$input-prefix-bg || scale-color($white, $lightness: -5%) !default;
// $is-button - Toggle position settings if prefix is a button. Default: false
postfix($bg = $input-prefix-bg, $border-left-hidden = true, $border = $input-prefix-border-color, $is-button = false) {

    if $bg {
        background: $bg
        if $border-left-hidden {
            border-{$default-float}: none
        }

        // Control the font color based on background brightness
        if (light($bg) || $bg == yellow) {
            color: $input-prefix-font-color
        } else {
            color: $input-prefix-font-color-inv
        }
    }

    if ($border != false) {
        border-color: $border
    }

    if $is-button {
        border: none
        padding-bottom: 0
        padding-top: 0
        padding-{$default-float}: 0
        padding-{$opposite-direction}: 0
        text-align: center
    }

}

// We use this mixin to style fieldsets
fieldset() {
    background: $fieldset-bg-color
    border: $fieldset-border-width $fieldset-border-style $fieldset-border-color
    if (! $fieldset-border) {
        border-width: 0
    }
    display: inline-block
    margin: $fieldset-margin
    padding: $fieldset-padding

    // and legend styles
    legend {
        background: $legend-bg
        color: $legend-font-color
        font-size: $legend-font-size
        font-weight: $legend-font-weight
        font_family($legend-font-family)
        margin: 0
        margin-{$default-float}: -(rem-calc(3))
        padding: $legend-padding
        text-transform: $legend-text-transform
    }

    button:last-of-type,
    .btn:last-of-type {
        margin-bottom: 0
    }

    & + .block__btnset {
        margin-top: -($fieldset-padding[0])
    }
}

// ========= BUTTON SETS =========
buttonset() {
    padding: $buttonset-bg-padding
    background-color: $buttonset-bg-color
    border: 1px solid $buttonset-border-color
    clear: both
    text-align: $buttonset-text-align
    
    &.inv {
        background-color: $buttonset-bg-color-inv
        border-color: $buttonset-border-color-inv
    }

    &:not(.btnset__offcanvas) {
        +mediaquery($medium-up) {
            .btn {
                margin-bottom: 0
                &__prev {
                    float: $default-float
                }
                &__save,
                &__next {
                    float: $opposite-direction
                }
            }
        }
        +mediaquery($small-only) {
            .btn {
                float: none
                display: block
            }
        }
    }

}

// @MIXIN
//
// We use this mixin to control border and background color of error inputs
// $color - Default: $alert-color (found in settings file)
form-error-color($color = $alert-color) {
    background-color: lightness($color, 94%)
    border-bottom-color: $color

    // Go back to normal on focus
    &:focus {
        background-color: $input-focus-bg-color
        border-bottom-color: $input-border-color-focus
    }
}

// @MIXIN
//
// We use this simple mixin to style labels for error inputs
// $color - Default:$alert-color. Found in settings file
form-label-error-color($color = $alert-color) {
    color: $color
}

// @MIXIN
//
// We use this mixin to create error message styles
// $bg - Default: $alert-color (Found in settings file)
form-error-message($bg = $input-error-message-bg-color) {

    display: block
    font-size: $input-error-message-font-size
    font-style: $input-error-message-font-style
    font-weight: $input-error-message-font-weight
    margin-bottom: $form-spacing
    margin-top: $input-error-message-top
    padding: $input-error-message-padding
    text-transform: $input-error-message-font-transform

    background: $bg
    if (light($bg) || $bg == yellow) {
        color: $input-error-message-font-color
    } else {
        color: $input-error-message-font-color-alt
    }
}

// We use this mixin to style select elements
form-select()  {
    
    // Hide the dropdown arrow shown in newer IE versions
    &::-ms-expand {
        display: none
    }
    svg-background($file:'arrows_down.svg', $shapes:('polyline' 'polygon'), $stroke:$icon-color-normal, $stroke-hover:$icon-color-hover, $stroke-width:$svg-stroke-width-small, $position-x: $opposite-direction)
    
    if !$select-style-like-input {
        antialiased()
        -webkit-appearance: none !important
        -moz-appearance: none !important
        background-color: $select-bg-color
        border-width: $select-border-width
        border-style: $input-border-style
        border-color: $select-border-color
        color: $input-font-color
        font-size: $input-font-size
        font-weight: $input-font-weight
        font_family($body-font-family)
        padding: $select-padding
    }

    cursor($cursor-pointer-value)
    padding-{$opposite-direction}: $select-padding-arrow
    radius(0)

    // shadow-elevation('button', $shadow:false, $shadow-hover:true)

    if !$select-style-like-input {
        &.rad {
            radius($global-radius)
        }

        &:hover {
            if ($select-hover-bg-color != $select-bg-color) {
                background-color: $select-hover-bg-color
            }
            border-color: $select-border-color-focus
            color: $input-font-color-hover
        }

        if $input-include-glowing-effect {
            block-glowing-effect(focus, $glowing-effect-fade-time, $glowing-effect-color)
        }

        // Basic focus styles
        &:focus {
            background-color: $input-focus-bg-color
            border-color: $input-border-color-focus
            outline: none
        }

        // Disabled Styles
        &:disabled {
            background-color: $input-disabled-bg
            box-shadow: none
            opacity: .5

            &:hover {
                border-color: $input-border-color
                border-left-color: darken($fieldset-bg-color, 5%)
                border-top-color: @border-left-color
                color: $input-font-color
            }
        }
    }

    // Disabled Styles
    &:disabled {
        opacity: .5
    }

    option.placeholder {
        color: $placeholder-color
    }
}

form-checkbox-base() {
    & + label {
        color: $input-font-color
        cursor($cursor-pointer-value)
        display: inline-block
        font-size: $input-font-size
        font-weight: $form-label-ui-font-weight
        margin-{$default-float}: (.5 * $form-spacing)
        margin-{$opposite-direction}: $form-spacing
        margin-bottom: (.5 * $form-spacing)
        padding-bottom: 0
        // padding-left: ($input-checkbox-width * 1.5)
        position: relative
        text-transform: none
        vertical-align: baseline

        &:hover {
            color: $input-font-color-hover
        }

        &.inv {
            color: $form-label-inv-font-color

            &:hover {
                color: $form-label-inv-font-color-hover
            }
        }
    }
}

form-checkbox-base-pseudo() {
    visibility: hidden
    opacity: 0
    position: absolute

    & + label {
        padding-left: (1.5 * $input-checkbox-width)

        &::-moz-selection,
        &::selection {
            background: transparent
        }

        &:before {
            // margin-right: ($w * 2)
            content: ''
            display: inline-block
            height: $input-checkbox-width
            left: 0
            position: absolute
            top: ceil((pxify($form-label-line-height + $font-size-normalization) - $input-checkbox-width) / 2) 
            width: $input-checkbox-width
            single-transition(all)
        }
    }

    &:checked + label {
        &:before {
            text-align: center
        }
    }
}

form-checkbox-style-pseudo($bg = $input-checkbox-bg, $bg-hover = $input-checkbox-bg-hover, $bg-checked = $input-checkbox-bg-checked, $border-color = $input-checkbox-border-color, $border-color-hover = $input-checkbox-border-color-hover, $border-color-checked = $input-checkbox-border-color-checked, $font-color = false) {

    if !$ie8 {
        & + label {

            &:before {
                background-color: $bg // checkmark-rectangle fill
                border: $input-checkbox-inner-padding solid $bg // is actually our inner padding and bg fill
                if $input-checkbox-border-radius {
                    border-radius: $input-checkbox-border-radius
                }
                box-shadow: 0 0 0 $input-checkbox-border-width $border-color // is actually our border
            }

            &:hover {
                if $font-color {
                    color: (dark($font-color) ? darken($font-color, 10%) : lighten($font-color, 10%))
                }
                
                &:before {
                    background-color: $bg-hover // hover: checkmark-rectangle fill
                    box-shadow: 0 0 0 $input-checkbox-border-width $border-color-hover // hover: border
                }
            }
        }

        &:checked + label {
            &:before {
                background-color: $bg-checked // checked: checkmark-rectangle fill
                box-shadow: 0 0 0 $input-checkbox-border-width $border-color-checked // checked: border
            }
            &:hover::before {
                background-color: $bg-checked
            }
        }
    }
}

// We use this mixin to turn on/off HTML5 number spinners
html5number($browser, $on = true) {
    if ($on == false) {
        if ($browser == webkit) {
            -webkit-appearance: none
            margin: 0
        } else if ($browser == moz) {
            -moz-appearance: textfield
        }
    }
}


//
// @styles
//

if $include-html-form-classes {
    // Standard Forms
    form {
        margin: 0 0 $form-spacing
    }

    // Using forms within rows, we need to set some defaults
    form .row {
        form-row-base()
    }

    // Label Styles
    label {

        form-label()

        &--right {
            form-label(right,false)
        }
        &--inline {
            form-label(inline,false)
        }
        // Styles for required inputs
        // > em,
        > small {
            text-transform: $form-label-small-transform
            color: $form-label-required-font-color
        }
    }
    
    if $buttonset-include {
        .block__btnset {
            buttonset()
        }
    }

    // Attach elements to the beginning or end of an input
    .prefix,
    .postfix {
        prefix-postfix-base() 
    }

    // Adjust padding, alignment and radius if pre/post element is a button
    .postfix.btn {
        button-size(false,false)
        postfix(false, false, true)
    }
    .prefix.btn {
        button-size(false,false)
        prefix(false, false, true)
    }

    .prefix.btn--rad {
        radius(0)
        side-radius($default-float, $button-radius)
    }
    .postfix.btn--rad {
        radius(0)
        side-radius($opposite-direction, $button-radius)
    }
    .prefix.btn--rnd {
        radius(0)
        side-radius($default-float, $button-round)
    }
    .postfix.btn--rnd {
        radius(0)
        side-radius($opposite-direction, $button-round)
    }

    // Separate prefix and postfix styles when on span or label so buttons keep their own
    span.prefix,
    label.prefix {
        prefix()
    }
    span.postfix,
    label.postfix {
        postfix()
    }

    // We use this to get basic styling on all basic form elements
    $fieldelements = text-inputs(all, 'input')
    if $select-style-like-input {
        push($fieldelements, select)
    }

    {unquote(join(', ', $fieldelements))} {
    // {unquote(join(', ', text-inputs(all, 'input')))} {
        -webkit-appearance: none
        -moz-appearance: none
        // -webkit-border-radius: 0
        form-element()
        if ($input-include-glowing-effect == false) {
            single-transition((border-color background-color color), $ease:ease-in)
            // -webkit-transition: border-color $input-transition-fade-time $input-transition-fade-timing-function, background-color $input-transition-fade-time $input-transition-fade-timing-function
            // -moz-transition: border-color $input-transition-fade-time $input-transition-fade-timing-function, background-color $input-transition-fade-time $input-transition-fade-timing-function
            // -ms-transition: border-color $input-transition-fade-time $input-transition-fade-timing-function, background-color $input-transition-fade-time $input-transition-fade-timing-function
            // -o-transition: border-color $input-transition-fade-time $input-transition-fade-timing-function, background-color $input-transition-fade-time $input-transition-fade-timing-function
            // transition: border-color $input-transition-fade-time $input-transition-fade-timing-function, background-color $input-transition-fade-time $input-transition-fade-timing-function
        }
    }
    textarea {
        form-element()
        // height: auto
    }

    form {
        .row {
            .prefix--rad.row--collapse {
                input,
                textarea,
                select,
                button {
                    radius(0)
                    side-radius($opposite-direction, $button-radius)
                }
                .prefix {
                    radius(0)
                    side-radius($default-float, $button-radius)
                }
            }
            .postfix--rad.row--collapse {
                input,
                textarea,
                select,
                button {
                    radius(0)
                    side-radius($default-float, $button-radius)
                }
                .postfix {
                    radius(0)
                    side-radius($opposite-direction, $button-radius)
                }
            }
            .prefix--rnd.row--collapse {
                input,
                textarea,
                select,
                button {
                    radius(0)
                    side-radius($opposite-direction, $button-round)
                }
                .prefix {
                    radius(0)
                    side-radius($default-float, $button-round)
                }
            }
            .postfix--rnd.row--collapse {
                input,
                textarea,
                select,
                button {
                    radius(0)
                    side-radius($default-float, $button-round)
                }
                .postfix {
                    radius(0)
                    side-radius($opposite-direction, $button-round)
                }
            }
        }
    }

    input[type="submit"] {
        -webkit-appearance: none
        -moz-appearance: none
        -webkit-border-radius: 0
        antialiased()
    }

    // Respect enforced amount of rows for textarea
    textarea[rows] {
        height: auto
    }

    // Not allow resize out of parent
    textarea {
        max-width: 100%
    }

    // Add height value for select elements to match text input height
    select {
        form-select()
    }

    // inverted color styles
    input.inv,
    textarea.inv,
    select.inv {
        form-element-inv()
    }

    // Adjust margin for form elements below
    input[type="file"],
    input[type="checkbox"],
    input[type="radio"],
    select {
        margin: 0 0 $form-spacing 0
    }

    input[type="checkbox"],
    input[type="radio"] {
        form-checkbox-base()
    }

    // Pseudo element styled checkboxes
    *:not(.switch) > input[type="checkbox"],
    *:not(.switch) > input[type="radio"] {
        form-checkbox-base-pseudo()
        form-checkbox-style-pseudo()
    }
    *:not(.switch) > input[type="radio"] + label:before {
        radius(1000px)
    }
    *:not(.switch) > input[type="checkbox"].inv,
    *:not(.switch) > input[type="radio"].inv {
        form-checkbox-style-pseudo($bg:color_alpha($black, .25), $bg-hover:color_alpha($white, .25), $border-color:$white, $border-color-hover:$white, $border-color-checked:$white, $font-color:$white)
    }

    // Normalize file input width
    // input[type="file"] {
    //     width:100%
    // }

    // HTML5 Number spinners settings
    input[type=number] {
        html5number(moz, $input-number-spinners)
    }
    input[type="number"]::-webkit-inner-spin-button,
    input[type="number"]::-webkit-outer-spin-button {
        html5number(webkit, $input-number-spinners)
    }

    // We add basic fieldset styling
    fieldset {
        fieldset()
    }

    // Error Handling

    {data('abide')} {
        .error small.error,
        .error span.error,
        span.error,
        small.error {
            form-error-message()
        }
        span.error,
        small.error {
            display: none
        }
    }

    span.error,
    small.error {
        form-error-message()
    }

    .error {
        input,
        textarea,
        select {
            form-error-color($input-error-message-bg-color)
            margin-bottom: 0
        }

        input[type="checkbox"],
        input[type="radio"] {
            margin-bottom: $form-spacing
        }

        label,
        label.error {
            form-label-error-color($input-error-message-font-color)
        }

        small.error {
            form-error-message()
        }

        > label {
            > small {
                background: transparent
                color: lighten($form-label-font-color, 15%)
                display: inline
                font-size: $form-label-small-font-size
                font-style: normal
                margin: 0
                padding: 0
                text-transform: $form-label-small-transform
            }
        }

        span.error-message {
            display: block
        }
    }

    input.error,
    textarea.error,
    select.error {
        margin-bottom: 0
    }
    label.error {
        form-label-error-color()
    }
}