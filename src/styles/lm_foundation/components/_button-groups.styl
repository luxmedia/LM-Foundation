// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

@require "_global"
@require "_buttons"

//
// @Variables
//

$include-html-button-classes =              com_css.BUTTONGROUPS

// Sets the margin for the right side by default, and the left margin if right-to-left direction is used
$button-bar-margin-opposite ?=               rem-calc(10)
$button-group-border-width ?=                0 1px 1px 0

//
// Button Group Mixins
//

// We use this to add styles for a button group container
button-group-container($styles = true, $float = false) {
    if $styles {
        list-style: none
        margin: 0
        {$default-float}: 0
        clearfix()
    }
    if $float {
        float: $default-float
        margin-{$opposite-direction}: $button-bar-margin-opposite
        div {
            overflow: hidden
        }
    }
    if (!$ie8 && !$float) {
        // Eleminates whitespace before and behind li's
        // WARNING: Requires children to have a font-size definition gt 0!
        font-size: 0
    }
}

// We use this to control styles for button groups
button-group-style($radius = false, $even = false, $float = false, $orientation = horizontal) {

    > button,
    .btn {
        border-{$default-float}: $button-group-border-width solid
        border-color: $button-border-color
    }

    &:first-child {
        button,
        .btn {
            border-{$default-float}: 0
        }
    }

    // Control the flow, or remove those styles completely.
    if $float {
        margin: 0
        float: $float
        display: list-item
        // Make sure the first child doesn't get the negative margin.
        &:first-child {
            margin-{$default-float}: 0
        }
    } else {
        if $ie8 {
            margin-{$default-float}: -2px
            margin-{$opposite-direction}: -2px
            
            &:first-child {
                margin-{$default-float}: 0
            }
        }
        display: inline-block
    }

    if ($orientation == vertical) {
        display:block
        margin:0
        > button,
        .btn {
            border-top: $button-group-border-width solid
            border-color: $button-border-color
            border-left-width: 0
            margin:0
            display: block
        }
        > button {
            width: 100%
        }

        &:first-child {
            button,
            .btn {
                border-top: 0
            }
        }
    }

    // Control left and right radius on first/last buttons in the group.
    if $radius {
        &,
        > a,
        > button,
        > .btn {
            radius(0)
        }
        &:first-child,
        &:first-child > a,
        &:first-child > button,
        &:first-child > .btn {
            if ($orientation == vertical) {
                side-radius(top, $button-radius)
            }
            else {
                side-radius($default-float, $button-radius)
            }
        }
        &:last-child,
        &:last-child > a,
        &:last-child > button,
        &:last-child > .btn {
            if ($orientation == vertical) {
                side-radius(bottom, $button-radius)
            }
            else {
                side-radius($opposite-direction, $button-radius)
            }
        }
    }
    else if $radius {
        &,
        > a,
        > button,
        > .btn {
            radius(0)
        }
        &:first-child,
        &:first-child > a,
        &:first-child > button,
        &:first-child > .btn {
            if ($orientation == vertical) {
                side-radius(top, $radius)
            }
            else {
                side-radius($default-float, $radius)
            }
        }
        &:last-child,
        &:last-child > a,
        &:last-child > button,
        &:last-child > .btn {
            if ($orientation == vertical) {
                side-radius(bottom, $radius)
            }
            else {
                side-radius($opposite-direction, $radius)
            }
        }
    }

    // We use this to make the buttons even width across their container
    if $even {
        width: percentage((100/$even) / 100)
        button,
        .btn {
            width: 100%
        }
    }
}

// +exports("button-group") {
    if $include-html-button-classes {
        .btn-group {
            button-group-container()

            for $i in 2..8 {
                &.even-{$i} li {
                    button-group-style($even:$i, $float:null)
                }
            }

            > li {
                button-group-style()
            }

            &--stack {
                & > li {
                    button-group-style($orientation:vertical)
                    float: none
                }
            }

            &--stack-for-sml {
                & > li {
                    button-group-style($orientation:horizontal)
                    +mediaquery($small-only) {
                        button-group-style($orientation:vertical)
                    }
                }
            }

            &--radius > * {
                button-group-style($radius:$button-radius, $float:null)
            }
            &--radius.btn-group--stack > * {
                button-group-style($radius:$button-radius, $float:null, $orientation:vertical)
            }
            &--radius.btn-group--stack-for-sml > * {
                +mediaquery($medium-up) {
                    button-group-style($radius:$button-radius, $orientation:horizontal)
                }
                +mediaquery($small-only) {
                    button-group-style($radius:$button-radius, $orientation:vertical)
                }
            }

            &--round > * {
                button-group-style($radius:$button-round, $float:null)
            }
            &--round.btn-group--stack > * {
                button-group-style($radius:$button-med, $float:null, $orientation:vertical)
            }
            &--round.btn-group--stack-for-sml > * {
                +mediaquery($medium-up) {
                    button-group-style($radius:$button-round, $orientation:horizontal)
                }
                +mediaquery($small-only) {
                    button-group-style($radius:$button-med, $orientation:vertical)
                }
            }

        }

        .btn-bar {
            clearfix()
            .btn-group {
                button-group-container($styles:false, $float:true)
            }
        }
    }
// }
