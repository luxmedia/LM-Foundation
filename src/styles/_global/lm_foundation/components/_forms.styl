// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

@require "_global"
@require "_buttons"
@require "_alerts"

//
// @variables
//

$include-html-form-classes ?=                $include-html-classes

// set the base for lots of form spacing and positioning styles
$form-spacing ?=                             rem-calc(16)

// style the labels in different ways
$input-font-family ?=                        inherit
$input-font-color ?=                         $charcoal-1
$input-font-color-hover ?=                   $black
$input-font-size ?=                          fontsize(1rem)
$input-font-weight ?=                        $font-weight-normal
$input-bg-color ?=                           $white
$input-focus-bg-color ?=                     darken($white, 2%)
$input-border-color ?=                       darken($white, 20%)
$input-focus-border-color ?=                 darken($white, 40%)
$input-border-style ?=                       solid
$input-border-width ?=                       1px
$input-border-radius ?=                      $global-radius
$input-disabled-bg ?=                        transparent
$input-disabled-cursor ?=                    $cursor-disabled-value
$input-box-shadow ?=                         inset 0 1px 2px rgba(0,0,0,0.1)
$input-include-glowing-effect ?=             false

$form-label-pointer ?=                       pointer
$form-label-font-size ?=                     fontsize(0.8rem)
$form-label-font-weight ?=                   $font-weight-bold
$form-label-ui-font-weight ?=                $font-weight-normal
$form-label-line-height ?=                   1.5
$form-label-font-color ?=                    $gray-dark-1
$form-label-font-color-hover ?=              $input-font-color-hover
$form-label-small-transform ?=               capitalize
$form-label-small-font-size ?=               fontsize(0.75rem)
$form-label-bottom-margin ?=                 0
$form-label-bottom-padding ?=                rem-calc(4)
$form-label-required-font-color ?=           $primary-color

$input-checkbox-width ?=                     14px
$input-checkbox-bg ?=                        $white
$input-checkbox-bg-hover ?=                  $gray-medium-2
$input-checkbox-bg-checked ?=                $primary-color
$input-checkbox-inner-padding ?=             2px
$input-checkbox-border-width ?=              2px
$input-checkbox-border-color ?=              $gray-medium-2
$input-checkbox-border-color-hover ?=        $gray-dark-3
$input-checkbox-border-color-checked ?=      $gray-dark-3

// style the fieldset border and spacing.
$fieldset-bg-color ?=                        $gray-lighter-3
$fieldset-border-style ?=                    solid
$fieldset-border-width ?=                    1px
$fieldset-border-color ?=                    $gray-medium-1
$fieldset-padding ?=                         rem-calc(20)
$fieldset-margin ?=                          rem-calc(18 0)

// style the legends when you use them
$legend-bg ?=                                $white
$legend-font-color ?=                        $gray-medium-2
$legend-font-family ?=                       $font-family-custom
$legend-font-size ?=                         fontsize(0.9rem)
$legend-font-weight ?=                       $font-weight-bold
$legend-text-transform ?=                    uppercase
$legend-padding ?=                           rem-calc(0 5)

// style the prefix and postfix input elements
$input-prefix-bg ?=                          darken($white, 5%)
$input-prefix-border-color ?=                darken($white, 20%)
$input-prefix-border-size ?=                 1px
$input-prefix-border-type ?=                 solid
$input-prefix-overflow ?=                    hidden
$input-prefix-font-color ?=                  $charcoal-1
$input-prefix-font-color-alt ?=              $white

// We use this setting to turn on/off HTML5 number spinners (the up/down arrows)
$input-number-spinners ?=                    true

// style the error states for inputs and labels
$input-error-message-padding ?=              rem-calc(2 5)
$input-error-message-top ?=                  -1px
$input-error-message-font-size ?=            fontsize(0.8rem)
$input-error-message-font-weight ?=          $font-weight-bold
$input-error-message-font-style ?=           normal
$input-error-message-font-transform ?=       uppercase
$input-error-message-font-color ?=           $critical-font-color
$input-error-message-bg-color ?=             $critical-font-color
$input-error-message-font-color-alt ?=       $white

// style the glowing effect of inputs when focused
$glowing-effect-fade-time ?=                 0.45s
$glowing-effect-color ?=                     $input-focus-border-color

// Select variables
$select-bg-color ?=                          $white
$select-shadow-color ?=                      rgba($charcoal-1,0.1)
$select-shadow-color-hover ?=                rgba($charcoal-1,0.2)
$select-hover-bg-color ?=                    $white


//
// @MIXINS
//

// We use this mixin to give us form styles for rows inside of forms
form-row-base() {
    .row {
        margin: 0 ((-($form-spacing)) / 2)

        .col {
            padding: 0 ($form-spacing / 2)
        }

        // Use this to collapse the margins of a form row
        &.collapse {
            margin: 0

            .col {
                padding: 0
            }
            input {
                side-radius($opposite-direction, 0)
            }

        }
    }
    input.col,
    textarea.col {
        padding-{$default-float}: ($form-spacing / 2)
    }
}

// @MIXIN
//
// We use this mixin to give all basic form elements their style
form-element() {
    display: block
    margin: 0 0 $form-spacing 0
    padding: ($form-spacing / 2)
    height: ($input-font-size + $form-spacing - rem-calc(1))
    width: 100%
    font_family($input-font-family)
    font-size: $input-font-size
    font-weight: $input-font-weight
    color: $input-font-color
    background-color: $input-bg-color
    border-style: $input-border-style
    border-width: $input-border-width
    border-color: $input-border-color
    border-bottom-color: $edge = lighten($input-border-color, 45%)
    border-right-color: $edge    
    box-shadow: $input-box-shadow
    
    box-sizing(border-box)
    if $input-include-glowing-effect {
        block-glowing-effect(focus, $glowing-effect-fade-time, $glowing-effect-color)
    }
    // Basic focus styles
    &:focus {
        background-color: $input-focus-bg-color
        border-color: $input-focus-border-color
        outline: none
    }
    // Disbaled Styles
    &:disabled {
        background-color: $input-disabled-bg
        cursor: $input-disabled-cursor
    }

    // Disabled background input background color
    &[disabled],
    &[readonly],
    fieldset[disabled] & {
        background-color: $input-disabled-bg
        cursor: $input-disabled-cursor
    }
}

// @MIXIN
//
// We use this mixin to create form labels
//
// $alignment - Alignment options. Default: false. Options: [right, inline, false]
// $base-style - Control whether or not the base styles come through. Default: true.
form-label($alignment = false, $base-style = true) {

    // Control whether or not the base styles come through.
    if $base-style {
        font-size: $form-label-font-size
        color: $form-label-font-color
        cursor: $form-label-pointer
        display: block
        font-weight: $form-label-font-weight
        line-height: $form-label-line-height
        margin-bottom: $form-label-bottom-margin
        padding-bottom: $form-label-bottom-padding
        text-transform: uppercase

    }

    // Alignment options
    if ($alignment == right) {
        float: none !important
        text-align: right
    }
    else if ($alignment == inline) {
        margin: 0 0 $form-spacing 0
        padding: ($form-spacing / 2 + rem-calc($input-border-width)) 0
    }
}

// We use this mixin to create postfix/prefix form Labels
prefix-postfix-base() {
    display: block
    position: relative
    z-index: 2
    text-align: center
    width: 100%
    padding-top: 0
    padding-bottom: 0
    border-style: $input-prefix-border-type
    border-width: $input-prefix-border-size
    overflow: $input-prefix-overflow
    font-size: $form-label-font-size
    height: ($input-font-size + $form-spacing - rem-calc(1))
    line-height: ($input-font-size + $form-spacing - rem-calc(1))
}

// @MIXIN
//
// We use this mixin to create prefix label styles
// $bg - Default:$input-prefix-bg || scale-color($white, $lightness: -5%) !default
// $is-button - Toggle position settings if prefix is a button. Default:false
//
prefix($bg = $input-prefix-bg, $border = $input-prefix-border-color, $is-button = false) {

    if $bg {
        background: $bg
        border-{$opposite-direction}: none

        // Control the font color based on background brightness
        if (light($bg) || $bg == yellow) {
            color: $input-prefix-font-color
        } else {
            color: $input-prefix-font-color-alt
        }
    }

    if $border {
        border-color: $border
    }

    if $is-button {
        padding-{$default-float}: 0
        padding-{$opposite-direction}: 0
        padding-top: 0
        padding-bottom: 0
        text-align: center
        border: none
    }

}

// @MIXIN
//
// We use this mixin to create postfix label styles
// $bg - Default:$input-prefix-bg || scale-color($white, $lightness: -5%) !default
// $is-button - Toggle position settings if prefix is a button. Default: false
postfix($bg = $input-prefix-bg, $border = $input-prefix-border-color, $is-button = false) {

    if $bg {
        background: $bg
        border-{$default-float}: none

        // Control the font color based on background brightness
        if (light($bg) || $bg == yellow) {
            color: $input-prefix-font-color
        } else {
            color: $input-prefix-font-color-alt
        }
    }

    if $border {
        border-color: $border
    }

    if $is-button {
        padding-{$default-float}: 0
        padding-{$opposite-direction}: 0
        padding-top: 0
        padding-bottom: 0
        text-align: center
        border: none
    }

}

// We use this mixin to style fieldsets
fieldset() {
    display: inline-block
    padding: $fieldset-padding
    margin: $fieldset-margin
    background: $fieldset-bg-color
    border: $fieldset-border-width $fieldset-border-style darken($fieldset-bg-color,3%)

    // and legend styles
    legend {
        padding: $legend-padding
        margin: 0
        margin-{$default-float}: -(rem-calc(3))
        font_family($legend-font-family)
        font-size: $legend-font-size
        font-weight: $legend-font-weight
        text-transform: $legend-text-transform
        color: $legend-font-color
        background: $legend-bg
    }
}

// @MIXIN
//
// We use this mixin to control border and background color of error inputs
// $color - Default: $alert-color (found in settings file)
form-error-color($color = $alert-color) {
    border-color: $color
    background-color: lightness($color, 94%)

    // Go back to normal on focus
    &:focus {
        background-color: $input-focus-bg-color
        border-color: $input-focus-border-color
    }
}

// @MIXIN
//
// We use this simple mixin to style labels for error inputs
// $color - Default:$alert-color. Found in settings file
form-label-error-color($color = $alert-color) {
    color: $color
}

// @MIXIN
//
// We use this mixin to create error message styles
// $bg - Default: $alert-color (Found in settings file)
form-error-message($bg = $input-error-message-bg-color) {

    // alert-style($bg: $alert-color, $font-color: $alert-font-color-critical, $border-color:$alert-color)

    display: block
    padding: $input-error-message-padding
    margin-top: $input-error-message-top
    margin-bottom: $form-spacing
    font-size: $input-error-message-font-size
    font-weight: $input-error-message-font-weight
    font-style: $input-error-message-font-style
    text-transform: $input-error-message-font-transform

    background: $bg
    if (light($bg) || $bg == yellow) {
        color: $input-error-message-font-color
    } else {
        color: $input-error-message-font-color-alt
    }
}

// We use this mixin to style select elements
form-select()  {
    -webkit-appearance: none !important
    background-color: $white

    // Hide the dropdown arrow shown in newer IE versions
    &::-ms-expand {
        display: none
    }

    svg-background($file:'arrows_down.svg', $shapes:'polyline', $stroke:$input-font-color, $stroke-hover:$input-font-color-hover, $stroke-width:$svg-stroke-width-small)

    padding: ($form-spacing / 2)
    line-height: normal
    font-size: $input-font-size
    font_family($body-font-family)
    font-weight: $input-font-weight
    color: $input-font-color
    border-longhand($width:$input-border-width,$style:$input-border-style,$color:$input-border-color)
    border-top-color: $edge = darken($fieldset-bg-color, 4%)
    border-left-color: $edge
    box-shadow: 1px 1px 1px $select-shadow-color
    cursor: $cursor-pointer-value
    border-radius: 0
    &.radius {
        radius($global-radius)
    }
    &:hover {
        color: $input-font-color-hover
        background-color: $select-hover-bg-color
        border-bottom-color: $input-focus-border-color
        border-right-color: $input-focus-border-color
        border-top-color: $edge = darken($fieldset-bg-color, 8%)
        border-left-color: $edge
        box-shadow: 1px 1px 1px $select-shadow-color-hover
    }
    if $input-include-glowing-effect {
        block-glowing-effect(focus, $glowing-effect-fade-time, $glowing-effect-color)
    }
    // Basic focus styles
    &:focus {
        background-color: $input-focus-bg-color
        border-color: $input-focus-border-color
        outline: none
    }
    // Disabled Styles
    &:disabled {
        background-color: $input-disabled-bg
        opacity: 0.5
        cursor: $input-disabled-cursor
        border-style: dotted
        &:hover {
            color: $input-font-color
            border-color: $input-border-color
            border-top-color: $edge = darken($fieldset-bg-color, 4%)
            border-left-color: $edge
            box-shadow: 1px 1px 1px $select-shadow-color
        }
    }
}

form-checkbox-base() {
    visibility: hidden
    opacity: 0
    position: absolute

    & + label {
        position: relative
        display: inline-block
        margin-{$default-float}: ($form-spacing * .5)
        margin-{$opposite-direction}: $form-spacing
        margin-bottom: ($form-spacing * .5) // 0
        padding-bottom: 0
        padding-left: ($input-checkbox-width * 1.5)
        font-weight: $form-label-ui-font-weight
        font-size: $input-font-size
        text-transform: none
        vertical-align: baseline
        cursor: pointer
        &::-moz-selection,
        &::selection {
            background: transparent
        }
        &:before {
            display: inline-block
            width: $input-checkbox-width
            height: $input-checkbox-width
            position: absolute
            left: 0px
            top: ceil((pxify($form-label-line-height+$font-size-normalization) - $input-checkbox-width) / 2) 
            // margin-right: ($w * 2)
            content: ""
            single-transition(all)
        }
    }

    &:checked + label {
        &:before {
            text-align: center
        }
    }
}

form-checkbox-style($bg = $input-checkbox-bg, $bg-hover = $input-checkbox-bg-hover, $bg-checked = $input-checkbox-bg-checked, $border-color = $input-checkbox-border-color, $border-color-hover = $input-checkbox-border-color-hover, $border-color-checked = $input-checkbox-border-color-checked, $font-color = $input-font-color) {

    & + label {
        color: $font-color
        &:before {
            background-color: $bg // checkmark-rectangle fill
            border: $input-checkbox-inner-padding solid $bg // is actually our inner padding and bg fill
            border-top-color: darken($bg, 5%) // bg fill shade
            box-shadow: 0 0 0 $input-checkbox-border-width $border-color // is actually our border
        }
        &:hover {
            color: (dark($font-color) ? darken($font-color, 10%) : lighten($font-color, 10%))
            &:before {
                background-color: $bg-hover // hover: checkmark-rectangle fill
                box-shadow: 0 0 0 $input-checkbox-border-width $border-color-hover // hover: border
            }
        }
    }

    &:checked + label {
        &:before {
            background-color: $bg-checked // checked: checkmark-rectangle fill
            // border-color: ( (lightness($bg-checked) < 50%) ? $bg : $gray-darker-1) // checked: bg fill
            // border-top-color: ( (lightness($bg-checked) < 50%) ? darken($bg, 5%) : darken($gray-darker-1,10%)) // checked: bg fill shade
            box-shadow: 0 0 0 $input-checkbox-border-width $border-color-checked // checked: border
        }
        &:hover::before {
            background-color: $bg-checked
        }
    }
}

// We use this mixin to turn on/off HTML5 number spinners
html5number($browser, $on = true) {
    if ($on==false) {
        if ($browser==webkit) {
            -webkit-appearance: none
            margin: 0
        } else if ($browser==moz) {
            -moz-appearance: textfield
        }
    }
}

// +exports("form") {
    if $include-html-form-classes {
        /* Standard Forms */
        form {
            margin: 0 0 $form-spacing
        }

        /* Using forms within rows, we need to set some defaults */
        form .row {
            form-row-base()
        }

        /* Label Styles */
        label {
            form-label()
            &.right {
                form-label(right,false)
            }
            &.inline {
                form-label(inline,false)
            }
            // Styles for required inputs
            > em,
            > small {
                text-transform: $form-label-small-transform
                color: $form-label-required-font-color
            }
        }

        /* Attach elements to the beginning or end of an input */
        .prefix,
        .postfix {
            prefix-postfix-base() 
        }

        /* Adjust padding, alignment and radius if pre/post element is a button */
        .postfix.btn {
            button-size(false,false)
            postfix(false, false, true)
        }
        .prefix.btn {
            button-size(false,false)
            prefix(false, false, true)
        }

        .prefix.btn.btn--radius {
            radius(0)
            side-radius($default-float, $button-radius)
        }
        .postfix.btn.btn--radius {
            radius(0)
            side-radius($opposite-direction, $button-radius)
        }
        .prefix.btn.btn--round {
            radius(0)
            side-radius($default-float, $button-round)
        }
        .postfix.btn.btn--round {
            radius(0)
            side-radius($opposite-direction, $button-round)
        }

        /* Separate prefix and postfix styles when on span or label so buttons keep their own */
        span.prefix,
        label.prefix {
            prefix()
        }
        span.postfix,
        label.postfix {
            postfix()
        }

        /* We use this to get basic styling on all basic form elements */
        {unquote(join(', ', text-inputs(all, 'input')))} {
            -webkit-appearance: none
            -webkit-border-radius: 0
            form-element()
            if ($input-include-glowing-effect == false) {
                single-transition(all, 0.15s, linear)
            }
        }
        textarea {
            form-element()
            height: auto
        }

        form {
            .row {
                .prefix--radius.row.collapse {
                    input,
                    textarea,
                    select {
                        radius(0)
                        side-radius($opposite-direction, $button-radius)
                    }
                    .prefix {
                        radius(0)
                        side-radius($default-float, $button-radius)
                    }
                }
                .postfix--radius.row.collapse {
                    input,
                    textarea,
                    select {
                        radius(0)
                        side-radius($default-float, $button-radius)
                    }
                    .postfix {
                        radius(0)
                        side-radius($opposite-direction, $button-radius)
                    }
                }
                .prefix--round.row.collapse {
                    input,
                    textarea,
                    select {
                        radius(0)
                        side-radius($opposite-direction, $button-round)
                    }
                    .prefix {
                        radius(0)
                        side-radius($default-float, $button-round)
                    }
                }
                .postfix--round.row.collapse {
                    input,
                    textarea,
                    select {
                        radius(0)
                        side-radius($default-float, $button-round)
                    }
                    .postfix {
                        radius(0)
                        side-radius($opposite-direction, $button-round)
                    }
                }
            }
        }

        input[type="submit"] {
            -webkit-appearance: none
            -webkit-border-radius: 0
            antialiased()
        }

        /* Respect enforced amount of rows for textarea */
        textarea[rows] {
            height: auto
        }

        /* Not allow resize out of parent */
        textarea {
            max-width: 100%
        }

        /* Add height value for select elements to match text input height */
        select {
            form-select()
            height: ($input-font-size + ($form-spacing * 1.5) - rem-calc(1))
            antialiased()
        }

        /* Adjust margin for form elements below */
        input[type="file"],
        input[type="checkbox"],
        input[type="radio"],
        select {
            margin: 0 0 $form-spacing 0
        }

        input[type="checkbox"],
        input[type="radio"] {
            form-checkbox-base()
            form-checkbox-style()
        }
        input[type="radio"] + label:before {
            radius(1000px)
        }
        input[type="checkbox"].checkbox--inverted,
        input[type="radio"].radio--inverted {
            form-checkbox-base()
            form-checkbox-style($bg:rgba($black,0.25), $bg-hover:rgba($white,0.25), $border-color:$white, $border-color-hover:$white, $border-color-checked:$white, $font-color:$white)
        }

        /* Normalize file input width */
        input[type="file"] {
            width:100%
        }

        /* HTML5 Number spinners settings */
        input[type=number] {
            html5number(moz, $input-number-spinners)
        }
        input[type="number"]::-webkit-inner-spin-button,
        input[type="number"]::-webkit-outer-spin-button {
            html5number(webkit, $input-number-spinners)
        }

        /* We add basic fieldset styling */
        fieldset {
            fieldset()
        }

        /* Error Handling */

        {data('abide')} {
            .error small.error,
            .error span.error,
            span.error,
            small.error {
                form-error-message()
            }
            span.error,
            small.error {
                display: none
            }
        }

        span.error,
        small.error {
            form-error-message()
        }

        .error {
            input,
            textarea,
            select {
                form-error-color($input-error-message-bg-color)
                margin-bottom: 0
            }

            input[type="checkbox"],
            input[type="radio"] {
                margin-bottom: $form-spacing
            }

            label,
            label.error {
                form-label-error-color($input-error-message-font-color)
            }

            small.error {
                form-error-message()
            }

            & > label {
                & > small {
                    color: lighten($form-label-font-color, 15%)
                    background: transparent
                    padding: 0
                    margin: 0
                    text-transform: $form-label-small-transform
                    font-style: normal
                    font-size: $form-label-small-font-size
                    display: inline
                }
            }

            span.error-message {
                display: block
            }
        }

        input.error,
        textarea.error,
        select.error {
            margin-bottom: 0
        }
        label.error {
            form-label-error-color()
        }
    }
// }