// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

@require "_global"


// @mixins
//
// Style the pagination container. Currently only used when centering elements.
// $center - Default: false, Options: true
pagination-container($center = false) {
    if $center {
        text-align: center
    }
}

// @mixins
// Style unavailable list items
pagination-unavailable-item() {
    a, button {
        cursor: $pagination-link-unavailable-cursor
        color: $pagination-link-unavailable-font-color
    }
    &:hover a,
    & a:focus,
    &:hover button,
    & button:focus { 
        if $pagination-link-border {
            border-color: $pagination-link-border
        }        
        background: $pagination-link-unavailable-bg-active 
    }
}
// @mixins
// Style the current list item. Do not assume that the current item has
// an anchor <a> element.
// $has-anchor - Default: true, Options: false
pagination-current-item($has-anchor = true) {
    if $has-anchor {
        a,
        button {
            background: $pagination-link-current-background
            color: $pagination-link-current-font-color
            font-weight: $pagination-link-current-font-weight
            cursor: $pagination-link-current-cursor
            
            &:hover,
            &:focus {
                background: $pagination-link-current-active-bg
                border-color: $pagination-link-current-background
            }
        }
    } else {
        height: auto
        padding: $pagination-link-pad
        background: $pagination-link-current-background
        color: $pagination-link-current-font-color
        font-weight: $pagination-link-current-font-weight
        cursor: $pagination-link-current-cursor
        radius(0)

        &:hover,
        &:focus {
            background: $pagination-link-current-active-bg
        }
    }
}

// @mixins
//
// We use this mixin to set the properties for the creating Foundation pagination
// $center - Left or center align the li elements. Default: false
// $base-style - Sets base styles for pagination. Default: true, Options: false
// $use-default-classes - Makes unavailable & current classes available for use. Default: true
pagination($center = false, $base-style = true, $use-default-classes = true) {

    if $base-style {
        display: block
        min-height: $pagination-height
        margin-{$default-float}: $pagination-margin

        li {
            height: $pagination-li-height
            color: $pagination-li-font-color
            font-size: $pagination-li-font-size
            margin-{$default-float}: $pagination-li-margin

            a,
            button {
                display: block
                padding: $pagination-link-pad
                color: $pagination-link-font-color
                background: $pagination-link-bg
                radius(0)
                font-weight: normal
                font-size: $pagination-font-size
                line-height: inherit
                if $pagination-link-border {
                    border:1px solid $pagination-link-border
                    border-width: $pagination-link-border-width
                }
                if ($pagination-link-boxshadow != false) {
                    box-shadow: $pagination-link-boxshadow
                }
                single-transition(background-color)
                single-transition(box-shadow)
            }
            
            &:first-child a,
            &:first-of-type a,
            &:first-child button,
            &:first-of-type button {
                if ($pagination-link-border != false) {
                    border-left: none
                }
            }
            &:last-child a,
            &:last-of-type a,
            &:last-child button,
            &:last-of-type button {
                if ($pagination-link-border != false) {
                    border-right:none
                }
                if ($pagination-link-boxshadow != false) {
                    box-shadow: 1px 1px 1px $pagination-link-border
                }
                
            }
            
            &:hover a,
            a:focus,
            &:hover button,
            button:focus {
                background: $pagination-link-active-bg
                color: $pagination-link-hover-color
                if $pagination-link-hover-border {
                    border-color: $pagination-link-hover-border
                }
                if $pagination-link-hover-boxshadow {            
                    box-shadow: $pagination-link-hover-boxshadow
                }
            }

            if $use-default-classes {
                &.is-unavailable {
                    pagination-unavailable-item()
                }
                &.is-current {
                    pagination-current-item()
                }
            }
            
        }
    }

    // Left or center align the li elements
    li {
        if $center {
            float: none
            display: inline-block
        } else {
            float: $pagination-li-float
            display: block
        }
    }
}

// +exports("pagination") {
    if $include-pagination-classes {
        ul.pagination {
            pagination()
        }

        /* Pagination centred wrapper */
        .pagination-centered {
            pagination-container(true)

            ul.pagination {
                pagination(true, false)
            }
        }
    }
// }