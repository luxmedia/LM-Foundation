// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

@require "_global"


//
// @mixins
//
// We use this mixin to create a default label base.
label-base() {
    font-weight: $label-font-weight
    font-family: $label-font-family
    text-align: center
    text-decoration: none
    line-height: 1
    white-space: nowrap
    display: inline-block
    position: relative
    margin-bottom: inherit
    if ($label-text-transform != false) {
        text-transform: $label-text-transform
    }
}

// @mixins
//
// We use this mixin to add label size styles.
// $padding - Used to determine label padding. Default: $label-padding || rem-calc(3 10 4) !default
// $text-size - Used to determine label text-size. Default: $text-size found in settings
label-size($padding = $label-padding, $text-size = $label-font-sizing) {
    if $padding {
        padding: $padding
    }
    if $text-size {
        font-size: $text-size
    }
}

// @mixins
//
// We use this mixin to add label styles.
// $bg - Default: $primary-color (found in settings file)
// $radius - Default: false, Options: true, sets radius to $global-radius (found in settings file)
label-style($bg = $primary-color, $radius = false) {

    // We control which background color comes through
    if $bg {
        background-color: $bg
        // We control the text color for you based on the background color.
        if light($bg) {
            color: $label-font-color
        } else {
            color: $label-font-color-alt
        }
    }

    // We use this to control the radius on labels.
    if ($radius == true) {
        radius($label-radius)
    } else if $radius {
        radius($radius)
    }

}

// @mixins
//
// We use this to add close buttons to alerts
// $padding - Default: $label-padding,
// $text-size - Default: $label-font-sizing,
// $bg - Default: $primary-color(found in settings file)
// $radius - Default: false, Options: true which sets radius to $global-radius (found in settings file)
label($padding = $label-padding, $text-size = $label-font-sizing, $bg = $primary-color, $radius = false) {
    label-base()
    label-size($padding, $text-size)
    label-style($bg, $radius)
}

// +exports("label") {
    if $include-html-label-classes {
        .label {
            label-base()
            label-size()
            label-style()

            &.radius {
                label-style(false, true)
            }
            &.round {
                label-style(false, $radius:1000px)
            }

            &.alert     {
                label-style($alert-color)
            }
            &.warning   {
                label-style($warning-color)
            }
            &.success   {
                label-style($success-color)
            }
            &.secondary {
                label-style($secondary-color)
            }
            &.info      {
                label-style($info-color)
            }
        }
    }
// }