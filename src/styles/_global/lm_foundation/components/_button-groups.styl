// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

@require "_global"
@require "_buttons"


//
// Button Group Mixins
//

// We use this to add styles for a button group container
button-group-container($styles = true, $float = false) {
    if $styles {
        list-style: none
        margin: 0
        {$default-float}: 0
        clearfix()
    }
    if $float {
        float: $default-float
        margin-{$opposite-direction}: $button-bar-margin-opposite
        & div {
            overflow: hidden
        }
    }
}

// We use this to control styles for button groups
button-group-style($radius = false, $even = false, $float = false, $orientation = horizontal) {

    > button,
    .button {
        border-{$default-float}: $button-group-border-width solid
        border-color: $button-border-color
    }

    &:first-child {
        button,
        .button {
            border-{$default-float}: 0
        }
    }

    // We use this to control the flow, or remove those styles completely.
    if $float {
        margin: 0
        float: $float
        display: list-item
        // Make sure the first child doesn't get the negative margin.
        &:first-child {
            margin-{$default-float}: 0
        }
    }
    else {
        margin: 0 -2px
        display: inline-block
    }

    if ($orientation == vertical) {
        display:block
        margin:0
        > button,
        .button {
            border-top: $button-group-border-width solid
            border-color: $button-border-color
            border-left-width: 0
            margin:0
            display: block
        }

        &:first-child {
            button,
            .button {
                border-top: 0
            }
        }
    }

    // We use these to control left and right radius on first/last buttons in the group.
    if ($radius == true) {
        &,
        & > a,
        & > button,
        & > .button {
            radius(0)
        }
        &:first-child,
        &:first-child > a,
        &:first-child > button,
        &:first-child > .button {
            if ($orientation == vertical) {
                side-radius(top, $button-radius)
            }
            else {
                side-radius($default-float, $button-radius)
            }
        }
        &:last-child,
        &:last-child > a,
        &:last-child > button,
        &:last-child > .button {
            if ($orientation == vertical) {
                side-radius(bottom, $button-radius)
            }
            else {
                side-radius($opposite-direction, $button-radius)
            }
        }
    }
    else if $radius {
        &,
        & > a,
        & > button,
        & > .button {
            radius(0)
        }
        &:first-child,
        &:first-child > a,
        &:first-child > button,
        &:first-child > .button {
            if ($orientation == vertical) {
                side-radius(top, $radius)
            }
            else {
                side-radius($default-float, $radius)
            }
        }
        &:last-child,
        &:last-child > a,
        &:last-child > button,
        &:last-child > .button {
            if ($orientation == vertical) {
                side-radius(bottom, $radius)
            }
            else {
                side-radius($opposite-direction, $radius)
            }
        }
    }

    // We use this to make the buttons even width across their container
    if $even {
        width: percentage((100/$even) / 100)
        button,
        .button {
            width: 100%
        }
    }
}

// +exports("button-group") {
    if $include-html-button-classes {
        .button-group {
            button-group-container()

            & > li {
                button-group-style()
            }

            &.stack {
                & > li {
                button-group-style(false,false,false,$orientation = vertical)
                float: none }
            }

            &.stack-for-small {
                & > li {
                    button-group-style(false,false,false,horizontal)
                    @media $small-only {
                        button-group-style(false,false,false,vertical)
                    }
                }
            }

            &.radius > * {
                button-group-style($button-radius, false, null)
            }
            &.radius.stack > * {
                button-group-style($button-radius, false, null, vertical)
            }
            &.radius.stack-for-small > * {
                @media $medium-up {
                    button-group-style($button-radius, false, false,horizontal)
                }
                @media $small-only {
                    button-group-style($button-radius,false,false,vertical)
                }
            }

            &.round > * {
                button-group-style($button-round, false, null)
            }
            &.round.stack > * {
                button-group-style($button-med, false, null, vertical)
            }
            &.round.stack-for-small > * {
                @media $medium-up {
                    button-group-style($button-round,false,false,horizontal)
                }
                @media $small-only {
                    button-group-style($button-med,false,false,vertical)
                }
            }

            for $i in 2..8 {
                &.even-{$i} li {
                    button-group-style(false, $i, null)
                }
            }
        }

        .button-bar {
            clearfix()
            .button-group {
                button-group-container(false, true)
            }
        }
    }
// }
